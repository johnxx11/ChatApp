{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useLayoutEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, Input } from \"react-native-elements\";\nimport { Entypo } from '@expo/vector-icons';\nimport { db } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddChatScreen = function AddChatScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    input = _useState2[0],\n    setInput = _useState2[1];\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"New Chat Rooms\",\n      headerStyle: {\n        backgroundColor: \"#191970\"\n      }\n    });\n  }, [navigation]);\n  var createChat = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield db.collection('chats').add({\n        chatName: input\n      }).then(function () {\n        navigation.goBack();\n      }).catch(function (error) {\n        return alert(error);\n      });\n    });\n    return function createChat() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Input, {\n      placeholder: \"Chat Room Name\",\n      value: input,\n      onChangeText: function onChangeText(text) {\n        return setInput(text);\n      },\n      onSubmitEditing: createChat,\n      leftIcon: _jsx(Entypo, {\n        name: \"chat\",\n        size: 30,\n        color: \"grey\"\n      })\n    }), _jsx(Button, {\n      onPress: createChat,\n      title: \"Create\",\n      disabled: !input || input.trim() === \"\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: \"95%\",\n    alignSelf: \"center\"\n  }\n});\nexport default AddChatScreen;","map":{"version":3,"names":["React","useState","useLayoutEffect","Button","Input","Entypo","db","AddChatScreen","navigation","input","setInput","setOptions","title","headerStyle","backgroundColor","createChat","collection","add","chatName","then","goBack","catch","error","alert","styles","container","text","trim","StyleSheet","create","width","alignSelf"],"sources":["/Users/johnwu/ChatApp/ChatApp/ChatApp/screens/AddChatScreen.js"],"sourcesContent":["import React, { useState, useLayoutEffect } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Button, Input} from \"react-native-elements\";\nimport { Entypo } from '@expo/vector-icons';\nimport { db } from '../firebase';\n\nconst AddChatScreen = ({ navigation }) => {\n    const [input, setInput] = useState(\"\");\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"New Chat Rooms\",\n            headerStyle: { backgroundColor: \"#191970\" },\n        });\n    }, [navigation]);\n\n    const createChat = async () => {\n        await db.collection('chats').add({\n            chatName: input,\n        }).then(() => {\n            navigation.goBack();\n        }).catch((error) => alert(error));\n    };\n\n    return (\n        <View style={styles.container}>\n            <Input\n                placeholder=\"Chat Room Name\" \n                value={input} \n                onChangeText={(text) => setInput(text)}\n                onSubmitEditing={createChat}\n                leftIcon={\n                    <Entypo name=\"chat\" size={30} color=\"grey\" />\n                }\n            />\n            <Button onPress={createChat} title='Create' disabled={!input || input.trim() === \"\"}/>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        width: \"95%\",\n        alignSelf: \"center\"\n    },\n});\n\nexport default AddChatScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,eAAe,QAAQ,OAAO;AAAC;AAAA;AAEzD,SAASC,MAAM,EAAEC,KAAK,QAAO,uBAAuB;AACpD,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,EAAE;AAAsB;AAAA;AAEjC,IAAMC,aAAa,GAAG,SAAhBA,aAAa,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EAC/B,gBAA0BP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BQ,KAAK;IAAEC,QAAQ;EACtBR,eAAe,CAAC,YAAM;IAClBM,UAAU,CAACG,UAAU,CAAC;MAClBC,KAAK,EAAE,gBAAgB;MACvBC,WAAW,EAAE;QAAEC,eAAe,EAAE;MAAU;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhB,IAAMO,UAAU;IAAA,8BAAG,aAAY;MAC3B,MAAMT,EAAE,CAACU,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAAC;QAC7BC,QAAQ,EAAET;MACd,CAAC,CAAC,CAACU,IAAI,CAAC,YAAM;QACVX,UAAU,CAACY,MAAM,EAAE;MACvB,CAAC,CAAC,CAACC,KAAK,CAAC,UAACC,KAAK;QAAA,OAAKC,KAAK,CAACD,KAAK,CAAC;MAAA,EAAC;IACrC,CAAC;IAAA,gBANKP,UAAU;MAAA;IAAA;EAAA,GAMf;EAED,OACI,MAAC,IAAI;IAAC,KAAK,EAAES,MAAM,CAACC,SAAU;IAAA,WAC1B,KAAC,KAAK;MACF,WAAW,EAAC,gBAAgB;MAC5B,KAAK,EAAEhB,KAAM;MACb,YAAY,EAAE,sBAACiB,IAAI;QAAA,OAAKhB,QAAQ,CAACgB,IAAI,CAAC;MAAA,CAAC;MACvC,eAAe,EAAEX,UAAW;MAC5B,QAAQ,EACJ,KAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,IAAI,EAAE,EAAG;QAAC,KAAK,EAAC;MAAM;IAC7C,EACH,EACF,KAAC,MAAM;MAAC,OAAO,EAAEA,UAAW;MAAC,KAAK,EAAC,QAAQ;MAAC,QAAQ,EAAE,CAACN,KAAK,IAAIA,KAAK,CAACkB,IAAI,EAAE,KAAK;IAAG,EAAE;EAAA,EACnF;AAEf,CAAC;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAM,CAAC;EAC7BJ,SAAS,EAAE;IACPK,KAAK,EAAE,KAAK;IACZC,SAAS,EAAE;EACf;AACJ,CAAC,CAAC;AAEF,eAAexB,aAAa"},"metadata":{},"sourceType":"module"}