{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Button, Input, Text } from \"react-native-elements\";\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    imageUrl = _useState8[0],\n    setImageUrl = _useState8[1];\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerBackTitle: \"\",\n      headerStyle: {\n        backgroundColor: \"#5f9ea0\"\n      }\n    });\n  }, [navigation]);\n  var register = function register() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (authUser) {\n      authUser.user.updateProfile({\n        displayName: name,\n        photoURL: imageUrl || \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\n      });\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n  return _jsxs(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(Text, {\n      h3: true,\n      style: {\n        marginBottom: 50\n      },\n      children: \"Create a ChatApp Account\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Input, {\n        placeholder: \"User Name\",\n        autoFocus: true,\n        type: \"text\",\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Email\",\n        type: \"email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        type: \"password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Profile Picture URL (optional)\",\n        type: \"text\",\n        value: imageUrl,\n        onChangeText: function onChangeText(text) {\n          return setImageUrl(text);\n        },\n        onSubmitEditing: register\n      })]\n    }), _jsx(Button, {\n      containerStyle: styles.button,\n      raised: true,\n      onPress: register,\n      title: \"Register\"\n    })]\n  });\n};\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  button: {\n    width: 200,\n    marginTop: 10,\n    borderRadius: 100\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  inputContainer: {\n    width: 300\n  }\n});","map":{"version":3,"names":["React","useLayoutEffect","useState","StatusBar","Button","Input","Text","auth","RegisterScreen","navigation","name","setName","email","setEmail","password","setPassword","imageUrl","setImageUrl","setOptions","headerBackTitle","headerStyle","backgroundColor","register","createUserWithEmailAndPassword","then","authUser","user","updateProfile","displayName","photoURL","catch","error","alert","message","styles","container","marginBottom","inputContainer","text","button","StyleSheet","create","width","marginTop","borderRadius","flex","alignItems","justifyContent","padding"],"sources":["/Users/johnwu/ChatApp/ChatApp/ChatApp/screens/RegisterScreen.js"],"sourcesContent":["import React, { useLayoutEffect, useState }from 'react';\nimport { StyleSheet, View, KeyboardAvoidingView } from 'react-native';\nimport { StatusBar } from \"expo-status-bar\";\nimport { Button, Input, Text } from \"react-native-elements\";\nimport { auth } from \"../firebase\";\n\nconst RegisterScreen = ({ navigation }) => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerBackTitle: \"\",\n            headerStyle: { backgroundColor: \"#5f9ea0\" },\n        });\n    }, [navigation]);\n\n    const register = () => {\n        auth.createUserWithEmailAndPassword(email, password)\n        .then((authUser) => {\n            authUser.user.updateProfile({\n                displayName: name,\n                photoURL: imageUrl || \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\",\n            })\n        })\n        .catch((error) => alert(error.message));\n    }\n\n    return (\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n            <StatusBar style=\"light\" />\n            <Text h3 style={{ marginBottom: 50 }}> \n                Create a ChatApp Account\n            </Text>\n            <View style={styles.inputContainer}>\n                <Input \n                    placeholder='User Name' \n                    autoFocus \n                    type='text' \n                    value={name}\n                    onChangeText={text => setName(text)}\n                />\n                <Input \n                    placeholder='Email' \n                    type='email' \n                    value={email}\n                    onChangeText={text => setEmail(text)}\n                />\n                <Input \n                    placeholder='Password' \n                    secureTextEntry\n                    type='password' \n                    value={password}\n                    onChangeText={text => setPassword(text)}\n                />\n                <Input \n                    placeholder='Profile Picture URL (optional)' \n                    type='text' \n                    value={imageUrl}\n                    onChangeText={text => setImageUrl(text)}\n                    onSubmitEditing={register}\n                />\n            </View>\n\n            <Button \n                containerStyle={styles.button}\n                raised \n                onPress={register} \n                title=\"Register\" \n            />\n        </KeyboardAvoidingView>\n    );\n};\n\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n    button: {\n        width: 200,\n        marginTop: 10,\n        borderRadius: 100\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 10,\n        backgroundColor: 'white',\n        \n    },\n    inputContainer: {\n        width: 300,\n    }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}