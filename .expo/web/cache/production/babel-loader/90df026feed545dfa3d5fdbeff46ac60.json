{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{nanoid}from'nanoid/non-secure';var BaseRouter={getStateForAction:function getStateForAction(state,action){switch(action.type){case'SET_PARAMS':{var index=action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(index===-1){return null;}return _objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(r,i){return i===index?_objectSpread(_objectSpread({},r),{},{params:_objectSpread(_objectSpread({},r.params),action.payload.params)}):r;})});}case'RESET':{var nextState=action.payload;if(nextState.routes.length===0||nextState.routes.some(function(route){return!state.routeNames.includes(route.name);})){return null;}if(nextState.stale===false){if(state.routeNames.length!==nextState.routeNames.length||nextState.routeNames.some(function(name){return!state.routeNames.includes(name);})){return null;}return _objectSpread(_objectSpread({},nextState),{},{routes:nextState.routes.map(function(route){return route.key?route:_objectSpread(_objectSpread({},route),{},{key:route.name+\"-\"+nanoid()});})});}return nextState;}default:return null;}},shouldActionChangeFocus:function shouldActionChangeFocus(action){return action.type==='NAVIGATE';}};export default BaseRouter;","map":{"version":3,"sources":["BaseRouter.tsx"],"names":["nanoid","BaseRouter","getStateForAction","state","action","type","index","source","routes","findIndex","r","key","map","i","params","payload","nextState","length","some","route","routeNames","includes","name","stale","shouldActionChangeFocus"],"mappings":"w0BAAA,OAASA,MAAT,KAAuB,mBAAvB,CAYA,GAAMC,WAAU,CAAG,CACjBC,iBADiB,4BAEfC,KAFe,CAGfC,MAHe,CAIqB,CACpC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,YAAL,CAAmB,CACjB,GAAMC,MAAK,CAAGF,MAAM,CAACG,MAAPH,CACVD,KAAK,CAACK,MAANL,CAAaM,SAAbN,CAAwBO,SAAAA,CAAC,QAAKA,EAAC,CAACC,GAAFD,GAAUN,MAAM,CAACG,MAAtB,EAAzBJ,CADUC,CAEVD,KAAK,CAACG,KAFV,CAIA,GAAIA,KAAK,GAAK,CAAC,CAAf,CAAkB,CAChB,MAAO,KAAP,CACF,CAEA,sCACKH,KADL,MAEEK,MAAM,CAAEL,KAAK,CAACK,MAANL,CAAaS,GAAbT,CAAiB,SAACO,CAAD,CAAIG,CAAJ,QACvBA,EAAC,GAAKP,KAANO,gCACSH,CADTG,MACYC,MAAM,gCAAOJ,CAAC,CAACI,MAAT,EAAoBV,MAAM,CAACW,OAAPX,CAAeU,MAAnC,CADlBD,GAEIH,CAHmB,EAAjBP,CAFV,GAQF,CAEA,IAAK,OAAL,CAAc,CACZ,GAAMa,UAAS,CAAGZ,MAAM,CAACW,OAAzB,CAEA,GACEC,SAAS,CAACR,MAAVQ,CAAiBC,MAAjBD,GAA4B,CAA5BA,EACAA,SAAS,CAACR,MAAVQ,CAAiBE,IAAjBF,CACGG,SAAAA,KAAuB,QAAK,CAAChB,KAAK,CAACiB,UAANjB,CAAiBkB,QAAjBlB,CAA0BgB,KAAK,CAACG,IAAhCnB,CAAN,EAD1Ba,CAFF,CAKE,CACA,MAAO,KAAP,CACF,CAEA,GAAIA,SAAS,CAACO,KAAVP,GAAoB,KAAxB,CAA+B,CAC7B,GACEb,KAAK,CAACiB,UAANjB,CAAiBc,MAAjBd,GAA4Ba,SAAS,CAACI,UAAVJ,CAAqBC,MAAjDd,EACAa,SAAS,CAACI,UAAVJ,CAAqBE,IAArBF,CACGM,SAAAA,IAAI,QAAK,CAACnB,KAAK,CAACiB,UAANjB,CAAiBkB,QAAjBlB,CAA0BmB,IAA1BnB,CAAN,EADPa,CAFF,CAKE,CACA,MAAO,KAAP,CACF,CAEA,sCACKA,SADL,MAEER,MAAM,CAAEQ,SAAS,CAACR,MAAVQ,CAAiBJ,GAAjBI,CAAsBG,SAAAA,KAAK,QACjCA,MAAK,CAACR,GAANQ,CAAYA,KAAZA,gCAAyBA,KAAzBA,MAAgCR,GAAG,CAAKQ,KAAK,CAACG,IAAX,KAAmBtB,MAAM,EAA5DmB,EADiC,EAA3BH,CAFV,GAMF,CAEA,MAAOA,UAAP,CACF,CAEA,QACE,MAAO,KAAP,CAtDJ,CAwDD,CA7DgB,CA+DjBQ,uBA/DiB,kCA+DOpB,MA/DP,CA+DuC,CACtD,MAAOA,OAAM,CAACC,IAAPD,GAAgB,UAAvB,CACF,CAjEiB,CAAnB,CAoEA,cAAeH,WAAf","sourceRoot":"../../src","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n/**\n * Base router object that can be used when writing custom routers.\n * This provides few helper methods to handle common actions such as `RESET`.\n */\nconst BaseRouter = {\n  getStateForAction(state, action) {\n    switch (action.type) {\n      case 'SET_PARAMS':\n        {\n          const index = action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n          if (index === -1) {\n            return null;\n          }\n          return {\n            ...state,\n            routes: state.routes.map((r, i) => i === index ? {\n              ...r,\n              params: {\n                ...r.params,\n                ...action.payload.params\n              }\n            } : r)\n          };\n        }\n      case 'RESET':\n        {\n          const nextState = action.payload;\n          if (nextState.routes.length === 0 || nextState.routes.some(route => !state.routeNames.includes(route.name))) {\n            return null;\n          }\n          if (nextState.stale === false) {\n            if (state.routeNames.length !== nextState.routeNames.length || nextState.routeNames.some(name => !state.routeNames.includes(name))) {\n              return null;\n            }\n            return {\n              ...nextState,\n              routes: nextState.routes.map(route => route.key ? route : {\n                ...route,\n                key: `${route.name}-${nanoid()}`\n              })\n            };\n          }\n          return nextState;\n        }\n      default:\n        return null;\n    }\n  },\n  shouldActionChangeFocus(action) {\n    return action.type === 'NAVIGATE';\n  }\n};\nexport default BaseRouter;\n//# sourceMappingURL=BaseRouter.js.map"]},"metadata":{},"sourceType":"module"}