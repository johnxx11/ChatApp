{"ast":null,"code":"import Platform from\"react-native-web/dist/exports/Platform\";import createMultiStyleIconSet from\"./createMultiStyleIconSet\";export var FA5Style={regular:'regular',light:'light',solid:'solid',brand:'brand'};export function createFA5iconSet(glyphMap){var metadata=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var fonts=arguments.length>2?arguments[2]:undefined;var pro=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var metadataKeys=Object.keys(metadata);var fontFamily=\"FontAwesome5\"+(pro?'Pro':'Free');function fallbackFamily(glyph){for(var i=0;i<metadataKeys.length;i+=1){var family=metadataKeys[i];if(metadata[family].indexOf(glyph)!==-1){return family==='brands'?'brand':family;}}return'regular';}function glyphValidator(glyph,style){var family=style==='brand'?'brands':style;if(metadataKeys.indexOf(family)===-1)return false;return metadata[family].indexOf(glyph)!==-1;}function createFontAwesomeStyle(styleName,fontWeight){var family=arguments.length>2&&arguments[2]!==undefined?arguments[2]:fontFamily;var fontFile=fonts[styleName];return{fontFamily:family+\"-\"+styleName,fontFile:fontFile,fontStyle:Platform.select({ios:{fontWeight:fontWeight},default:{}}),glyphMap:glyphMap};}var brandIcons=createFontAwesomeStyle('Brand','400');var lightIcons=createFontAwesomeStyle('Light','100');var regularIcons=createFontAwesomeStyle('Regular','400');var solidIcons=createFontAwesomeStyle('Solid','700');var Icon=createMultiStyleIconSet({brand:brandIcons,light:lightIcons,regular:regularIcons,solid:solidIcons},{defaultStyle:'regular',fallbackFamily:fallbackFamily,glyphValidator:glyphValidator});return Icon;}","map":{"version":3,"sources":["../src/createIconSetFromFontAwesome5.ts"],"names":[],"mappings":"6DACA,MAAO,wBAAP,iCAEA,MAAO,IAAM,SAAQ,CAAG,CACtB,OAAO,CAAE,SADa,CAEtB,KAAK,CAAE,OAFe,CAGtB,KAAK,CAAE,OAHe,CAItB,KAAK,CAAE,OAJe,CAAjB,CAOP,MAAM,SAAU,iBAAV,CAA2B,QAA3B,CAAsE,IAAjC,SAAiC,2DAAtB,EAAsB,IAAlB,MAAkB,8CAAX,IAAW,2DAAL,KAAK,CAC1E,GAAM,aAAY,CAAG,MAAM,CAAC,IAAP,CAAY,QAAZ,CAArB,CACA,GAAM,WAAU,iBAAkB,GAAG,CAAG,KAAH,CAAW,MAAhC,CAAhB,CAEA,QAAS,eAAT,CAAwB,KAAxB,CAA6B,CAC3B,IAAK,GAAI,EAAC,CAAG,CAAb,CAAgB,CAAC,CAAG,YAAY,CAAC,MAAjC,CAAyC,CAAC,EAAI,CAA9C,CAAiD,CAC/C,GAAM,OAAM,CAAG,YAAY,CAAC,CAAD,CAA3B,CACA,GAAI,QAAQ,CAAC,MAAD,CAAR,CAAiB,OAAjB,CAAyB,KAAzB,IAAoC,CAAC,CAAzC,CAA4C,CAC1C,MAAO,OAAM,GAAK,QAAX,CAAsB,OAAtB,CAAgC,MAAvC,CACD,CACF,CAED,MAAO,SAAP,CACD,CAED,QAAS,eAAT,CAAwB,KAAxB,CAA+B,KAA/B,CAAoC,CAClC,GAAM,OAAM,CAAG,KAAK,GAAK,OAAV,CAAoB,QAApB,CAA+B,KAA9C,CACA,GAAI,YAAY,CAAC,OAAb,CAAqB,MAArB,IAAiC,CAAC,CAAtC,CAAyC,MAAO,MAAP,CACzC,MAAO,SAAQ,CAAC,MAAD,CAAR,CAAiB,OAAjB,CAAyB,KAAzB,IAAoC,CAAC,CAA5C,CACD,CAED,QAAS,uBAAT,CAAgC,SAAhC,CAA2C,UAA3C,CAA0E,IAAnB,OAAmB,2DAAV,UAAU,CACxE,GAAI,SAAQ,CAAG,KAAK,CAAC,SAAD,CAApB,CAEA,MAAO,CACL,UAAU,CAAK,MAAL,KAAe,SADpB,CAEL,QAAQ,CAAR,QAFK,CAGL,SAAS,CAAE,QAAQ,CAAC,MAAT,CAAgB,CACzB,GAAG,CAAE,CACH,UAAU,CAAV,UADG,CADoB,CAIzB,OAAO,CAAE,EAJgB,CAAhB,CAHN,CASL,QAAQ,CAAR,QATK,CAAP,CAWD,CAED,GAAM,WAAU,CAAG,sBAAsB,CAAC,OAAD,CAAU,KAAV,CAAzC,CACA,GAAM,WAAU,CAAG,sBAAsB,CAAC,OAAD,CAAU,KAAV,CAAzC,CACA,GAAM,aAAY,CAAG,sBAAsB,CAAC,SAAD,CAAY,KAAZ,CAA3C,CACA,GAAM,WAAU,CAAG,sBAAsB,CAAC,OAAD,CAAU,KAAV,CAAzC,CACA,GAAM,KAAI,CAAG,uBAAuB,CAClC,CACE,KAAK,CAAE,UADT,CAEE,KAAK,CAAE,UAFT,CAGE,OAAO,CAAE,YAHX,CAIE,KAAK,CAAE,UAJT,CADkC,CAOlC,CACE,YAAY,CAAE,SADhB,CAEE,cAAc,CAAd,cAFF,CAGE,cAAc,CAAd,cAHF,CAPkC,CAApC,CAcA,MAAO,KAAP,CACD","sourcesContent":["import { Platform } from 'react-native';\nimport createMultiStyleIconSet from './createMultiStyleIconSet';\n\nexport const FA5Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand',\n};\n\nexport function createFA5iconSet(glyphMap, metadata = {}, fonts, pro = false) {\n  const metadataKeys = Object.keys(metadata);\n  const fontFamily = `FontAwesome5${pro ? 'Pro' : 'Free'}`;\n\n  function fallbackFamily(glyph) {\n    for (let i = 0; i < metadataKeys.length; i += 1) {\n      const family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n\n    return 'regular';\n  }\n\n  function glyphValidator(glyph, style) {\n    const family = style === 'brand' ? 'brands' : style;\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function createFontAwesomeStyle(styleName, fontWeight, family = fontFamily) {\n    let fontFile = fonts[styleName];\n\n    return {\n      fontFamily: `${family}-${styleName}`,\n      fontFile,\n      fontStyle: Platform.select({\n        ios: {\n          fontWeight,\n        },\n        default: {},\n      }),\n      glyphMap,\n    };\n  }\n\n  const brandIcons = createFontAwesomeStyle('Brand', '400');\n  const lightIcons = createFontAwesomeStyle('Light', '100');\n  const regularIcons = createFontAwesomeStyle('Regular', '400');\n  const solidIcons = createFontAwesomeStyle('Solid', '700');\n  const Icon = createMultiStyleIconSet(\n    {\n      brand: brandIcons,\n      light: lightIcons,\n      regular: regularIcons,\n      solid: solidIcons,\n    },\n    {\n      defaultStyle: 'regular',\n      fallbackFamily,\n      glyphValidator,\n    },\n  );\n\n  return Icon;\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}