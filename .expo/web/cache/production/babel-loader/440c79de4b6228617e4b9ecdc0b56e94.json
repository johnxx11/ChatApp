{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _excluded=[\"emit\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{CommonActions}from'@react-navigation/routers';import*as React from'react';import NavigationBuilderContext from\"./NavigationBuilderContext\";export default function useNavigationCache(_ref){var state=_ref.state,getState=_ref.getState,navigation=_ref.navigation,_setOptions=_ref.setOptions,router=_ref.router,emitter=_ref.emitter;var _React$useContext=React.useContext(NavigationBuilderContext),stackRef=_React$useContext.stackRef;var cache=React.useMemo(function(){return{current:{}};},[getState,navigation,_setOptions,router,emitter]);var actions=_objectSpread(_objectSpread({},router.actionCreators),CommonActions);cache.current=state.routes.reduce(function(acc,route){var previous=cache.current[route.key];if(previous){acc[route.key]=previous;}else{var emit=navigation.emit,rest=_objectWithoutProperties(navigation,_excluded);var _dispatch=function dispatch(thunk){var action=typeof thunk==='function'?thunk(getState()):thunk;if(action!=null){navigation.dispatch(_objectSpread({source:route.key},action));}};var withStack=function withStack(callback){var isStackSet=false;try{if(process.env.NODE_ENV!=='production'&&stackRef&&!stackRef.current){stackRef.current=new Error().stack;isStackSet=true;}callback();}finally{if(isStackSet&&stackRef){stackRef.current=undefined;}}};var helpers=Object.keys(actions).reduce(function(acc,name){acc[name]=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return withStack(function(){return _dispatch(actions[name].apply(actions,args));});};return acc;},{});acc[route.key]=_objectSpread(_objectSpread(_objectSpread(_objectSpread({},rest),helpers),emitter.create(route.key)),{},{dispatch:function dispatch(thunk){return withStack(function(){return _dispatch(thunk);});},getParent:function getParent(id){if(id!==undefined&&id===rest.getId()){return acc[route.key];}return rest.getParent(id);},setOptions:function setOptions(options){return _setOptions(function(o){return _objectSpread(_objectSpread({},o),{},_defineProperty({},route.key,_objectSpread(_objectSpread({},o[route.key]),options)));});},isFocused:function isFocused(){var state=getState();if(state.routes[state.index].key!==route.key){return false;}return navigation?navigation.isFocused():true;}});}return acc;},{});return cache.current;}","map":{"version":3,"sources":["useNavigationCache.tsx"],"names":["CommonActions","React","NavigationBuilderContext","useNavigationCache","state","getState","navigation","setOptions","router","emitter","stackRef","useContext","cache","useMemo","current","actions","actionCreators","routes","reduce","acc","route","previous","key","emit","rest","dispatch","thunk","action","source","withStack","callback","isStackSet","process","env","NODE_ENV","Error","stack","undefined","helpers","Object","keys","name","args","create","getParent","id","getId","options","o","isFocused","index"],"mappings":"o7BAAA,OACEA,aADF,KAMO,2BANP,CAOA,MAAO,GAAKC,MAAZ,KAAuB,OAAvB,CAEA,MAAOC,yBAAP,kCAwCA,cAAe,SAASC,mBAAT,CAA2B,IAA3B,CAWc,CAP3B,GACAC,MADA,CAOyB,IAPzB,CACAA,KADA,CAEAC,QAFA,CAOyB,IAPzB,CAEAA,QAFA,CAGAC,UAHA,CAOyB,IAPzB,CAGAA,UAHA,CAIAC,WAJA,CAOyB,IAPzB,CAIAA,UAJA,CAKAC,MALA,CAOyB,IAPzB,CAKAA,MALA,CAMAC,OANA,CAOyB,IAPzB,CAMAA,OANA,CAQA,sBAAqBR,KAAK,CAACU,UAANV,CAAiBC,wBAAjBD,CAArB,CAAQS,QAAR,mBAAQA,QAAR,CAKA,GAAME,MAAK,CAAGX,KAAK,CAACY,OAANZ,CACZ,iBAAO,CAAEa,OAAO,CAAE,EAAX,CAAP,EADYb,CAGZ,CAACI,QAAD,CAAWC,UAAX,CAAuBC,WAAvB,CAAmCC,MAAnC,CAA2CC,OAA3C,CAHYR,CAAd,CAMA,GAAMc,QAAO,gCACRP,MAAM,CAACQ,cADC,EAERhB,aAFQ,CAAb,CAKAY,KAAK,CAACE,OAANF,CAAgBR,KAAK,CAACa,MAANb,CAAac,MAAbd,CAEd,SAACe,GAAD,CAAMC,KAAN,CAAgB,CAChB,GAAMC,SAAQ,CAAGT,KAAK,CAACE,OAANF,CAAcQ,KAAK,CAACE,GAApBV,CAAjB,CAMA,GAAIS,QAAJ,CAAc,CAEZF,GAAG,CAACC,KAAK,CAACE,GAAP,CAAHH,CAAiBE,QAAjBF,CACD,CAHD,IAGO,CAEL,GAAQI,KAAR,CAA0BjB,UAA1B,CAAQiB,IAAR,CAAiBC,IAAjB,0BAA0BlB,UAA1B,YAEA,GAAMmB,UAAQ,CAAIC,QAAZD,SAAYC,CAAAA,KAAY,CAAK,CACjC,GAAMC,OAAM,CAAG,MAAOD,MAAP,GAAiB,UAAjB,CAA8BA,KAAK,CAACrB,QAAQ,EAAT,CAAnC,CAAkDqB,KAAjE,CAEA,GAAIC,MAAM,EAAI,IAAd,CAAoB,CAClBrB,UAAU,CAACmB,QAAXnB,gBAAsBsB,MAAM,CAAER,KAAK,CAACE,GAApChB,EAA4CqB,MAA5CrB,GACF,CACD,CAND,CAQA,GAAMuB,UAAS,CAAIC,QAAbD,UAAaC,CAAAA,QAAoB,CAAK,CAC1C,GAAIC,WAAU,CAAG,KAAjB,CAEA,GAAI,CACF,GACEC,OAAO,CAACC,GAARD,CAAYE,QAAZF,GAAyB,YAAzBA,EACAtB,QADAsB,EAEA,CAACtB,QAAQ,CAACI,OAHZ,CAIE,CAEAJ,QAAQ,CAACI,OAATJ,CAAmB,GAAIyB,MAAJ,GAAYC,KAA/B1B,CACAqB,UAAU,CAAG,IAAbA,CACF,CAEAD,QAAQ,GACT,CAZD,OAYU,CACR,GAAIC,UAAU,EAAIrB,QAAlB,CAA4B,CAC1BA,QAAQ,CAACI,OAATJ,CAAmB2B,SAAnB3B,CACF,CACF,CACD,CApBD,CAsBA,GAAM4B,QAAO,CAAGC,MAAM,CAACC,IAAPD,CAAYxB,OAAZwB,EAAqBrB,MAArBqB,CACd,SAACpB,GAAD,CAAMsB,IAAN,CAAe,CACbtB,GAAG,CAACsB,IAAD,CAAHtB,CAAY,UAAA,CAAA,IAAA,GAAA,KAAA,CAAA,SAAA,CAAA,MAAA,CAAIuB,IAAI,CAAA,GAAA,MAAA,CAAA,IAAA,CAAR,CAAQ,IAAA,CAAA,CAAR,CAAQ,IAAA,CAAA,IAAR,CAAQ,IAAA,EAAR,CAAQ,CAAJA,IAAI,CAAA,IAAA,CAAJA,CAAI,SAAA,CAAA,IAAA,CAAJA,CAAI,CAAA,MAClBb,UAAS,CAAC,iBAERJ,UAAQ,CAACV,OAAO,CAAC0B,IAAD,CAAP1B,OAAAA,OAAO,CAAU2B,IAAV,CAAR,CAFA,EAAD,CADS,CAIjB,CAJHvB,CAMA,MAAOA,IAAP,CACD,CATaoB,CAUd,EAVcA,CAAhB,CAaApB,GAAG,CAACC,KAAK,CAACE,GAAP,CAAHH,4DACKK,IADLL,EAEKmB,OAFLnB,EAIMV,OAAO,CAACkC,MAARlC,CAAeW,KAAK,CAACE,GAArBb,CAJNU,MAKEM,QAAQ,CAAGC,kBAAAA,KAAY,QAAKG,UAAS,CAAC,iBAAMJ,UAAQ,CAACC,KAAD,CAAd,EAAD,CAAd,EALzBP,CAMEyB,SAAS,CAAGC,mBAAAA,EAAW,CAAK,CAC1B,GAAIA,EAAE,GAAKR,SAAPQ,EAAoBA,EAAE,GAAKrB,IAAI,CAACsB,KAALtB,EAA/B,CAA6C,CAG3C,MAAOL,IAAG,CAACC,KAAK,CAACE,GAAP,CAAV,CACF,CAEA,MAAOE,KAAI,CAACoB,SAALpB,CAAeqB,EAAfrB,CAAP,CACD,CAdHL,CAeEZ,UAAU,CAAGwC,oBAAAA,OAAe,QAC1BxC,YAAU,CAAEyC,SAAAA,CAAC,wCACRA,CADQ,wBAEV5B,KAAK,CAACE,GAFI,gCAEO0B,CAAC,CAAC5B,KAAK,CAACE,GAAP,CAFR,EAEwByB,OAFxB,KAAH,CADgB,EAf9B5B,CAoBE8B,SAAS,CAAE,oBAAM,CACf,GAAM7C,MAAK,CAAGC,QAAQ,EAAtB,CAEA,GAAID,KAAK,CAACa,MAANb,CAAaA,KAAK,CAAC8C,KAAnB9C,EAA0BkB,GAA1BlB,GAAkCgB,KAAK,CAACE,GAA5C,CAAiD,CAC/C,MAAO,MAAP,CACF,CAIA,MAAOhB,WAAU,CAAGA,UAAU,CAAC2C,SAAX3C,EAAH,CAA4B,IAA7C,CACF,CA9BFa,GAgCF,CAEA,MAAOA,IAAP,CACD,CA9Fef,CA8Fb,EA9FaA,CAAhBQ,CAgGA,MAAOA,MAAK,CAACE,OAAb,CACF","sourceRoot":"../../src","sourcesContent":["import { CommonActions } from '@react-navigation/routers';\nimport * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\n/**\n * Hook to cache navigation objects for each screen in the navigator.\n * It's important to cache them to make sure navigation objects don't change between renders.\n * This lets us apply optimizations like `React.memo` to minimize re-rendering screens.\n */\nexport default function useNavigationCache(_ref) {\n  let {\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter\n  } = _ref;\n  const {\n    stackRef\n  } = React.useContext(NavigationBuilderContext);\n\n  // Cache object which holds navigation objects for each screen\n  // We use `React.useMemo` instead of `React.useRef` coz we want to invalidate it when deps change\n  // In reality, these deps will rarely change, if ever\n  const cache = React.useMemo(() => ({\n    current: {}\n  }),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [getState, navigation, setOptions, router, emitter]);\n  const actions = {\n    ...router.actionCreators,\n    ...CommonActions\n  };\n  cache.current = state.routes.reduce((acc, route) => {\n    const previous = cache.current[route.key];\n    if (previous) {\n      // If a cached navigation object already exists, reuse it\n      acc[route.key] = previous;\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {\n        emit,\n        ...rest\n      } = navigation;\n      const dispatch = thunk => {\n        const action = typeof thunk === 'function' ? thunk(getState()) : thunk;\n        if (action != null) {\n          navigation.dispatch({\n            source: route.key,\n            ...action\n          });\n        }\n      };\n      const withStack = callback => {\n        let isStackSet = false;\n        try {\n          if (process.env.NODE_ENV !== 'production' && stackRef && !stackRef.current) {\n            // Capture the stack trace for devtools\n            stackRef.current = new Error().stack;\n            isStackSet = true;\n          }\n          callback();\n        } finally {\n          if (isStackSet && stackRef) {\n            stackRef.current = undefined;\n          }\n        }\n      };\n      const helpers = Object.keys(actions).reduce((acc, name) => {\n        acc[name] = function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return withStack(() =>\n          // @ts-expect-error: name is a valid key, but TypeScript is dumb\n          dispatch(actions[name](...args)));\n        };\n        return acc;\n      }, {});\n      acc[route.key] = {\n        ...rest,\n        ...helpers,\n        // FIXME: too much work to fix the types for now\n        ...emitter.create(route.key),\n        dispatch: thunk => withStack(() => dispatch(thunk)),\n        getParent: id => {\n          if (id !== undefined && id === rest.getId()) {\n            // If the passed id is the same as the current navigation id,\n            // we return the cached navigation object for the relevant route\n            return acc[route.key];\n          }\n          return rest.getParent(id);\n        },\n        setOptions: options => setOptions(o => ({\n          ...o,\n          [route.key]: {\n            ...o[route.key],\n            ...options\n          }\n        })),\n        isFocused: () => {\n          const state = getState();\n          if (state.routes[state.index].key !== route.key) {\n            return false;\n          }\n\n          // If the current screen is focused, we also need to check if parent navigator is focused\n          // This makes sure that we return the focus state in the whole tree, not just this navigator\n          return navigation ? navigation.isFocused() : true;\n        }\n      };\n    }\n    return acc;\n  }, {});\n  return cache.current;\n}\n//# sourceMappingURL=useNavigationCache.js.map"]},"metadata":{},"sourceType":"module"}