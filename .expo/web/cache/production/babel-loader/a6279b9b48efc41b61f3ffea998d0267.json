{"ast":null,"code":"import*as React from'react';export default function useKeyedChildListeners(){var _React$useRef=React.useRef(Object.assign(Object.create(null),{getState:{},beforeRemove:{}})),keyedListeners=_React$useRef.current;var addKeyedListener=React.useCallback(function(type,key,listener){keyedListeners[type][key]=listener;return function(){keyedListeners[type][key]=undefined;};},[keyedListeners]);return{keyedListeners:keyedListeners,addKeyedListener:addKeyedListener};}","map":{"version":3,"sources":["useKeyedChildListeners.tsx"],"names":["React","useKeyedChildListeners","current","keyedListeners","useRef","Object","assign","create","getState","beforeRemove","addKeyedListener","useCallback","type","key","listener","undefined"],"mappings":"AAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAOA,cAAe,SAASC,uBAAT,EAAkC,CAC/C,kBAAoCD,KAAK,CAACI,MAANJ,CAMlCK,MAAM,CAACC,MAAPD,CAAcA,MAAM,CAACE,MAAPF,CAAc,IAAdA,CAAdA,CAAmC,CACjCG,QAAQ,CAAE,EADuB,CAEjCC,YAAY,CAAE,EAFmB,CAAnCJ,CANkCL,CAApC,CAAiBG,cAAjB,eAAQD,OAAR,CAYA,GAAMQ,iBAAgB,CAAGV,KAAK,CAACW,WAANX,CACvB,SACEY,IADF,CAEEC,GAFF,CAGEC,QAHF,CAIK,CAEHX,cAAc,CAACS,IAAD,CAAdT,CAAqBU,GAArBV,EAA4BW,QAA5BX,CAEA,MAAO,WAAM,CAEXA,cAAc,CAACS,IAAD,CAAdT,CAAqBU,GAArBV,EAA4BY,SAA5BZ,CACD,CAHD,CAID,CAbsBH,CAcvB,CAACG,cAAD,CAduBH,CAAzB,CAiBA,MAAO,CACLG,cAAc,CAAdA,cADK,CAELO,gBAAAA,CAAAA,gBAFK,CAAP,CAIF","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\nexport default function useKeyedChildListeners() {\n  const {\n    current: keyedListeners\n  } = React.useRef(Object.assign(Object.create(null), {\n    getState: {},\n    beforeRemove: {}\n  }));\n  const addKeyedListener = React.useCallback((type, key, listener) => {\n    // @ts-expect-error: according to ref stated above you can use `key` to index type\n    keyedListeners[type][key] = listener;\n    return () => {\n      // @ts-expect-error: according to ref stated above you can use `key` to index type\n      keyedListeners[type][key] = undefined;\n    };\n  }, [keyedListeners]);\n  return {\n    keyedListeners,\n    addKeyedListener\n  };\n}\n//# sourceMappingURL=useKeyedChildListeners.js.map"]},"metadata":{},"sourceType":"module"}