{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";var _excluded=[\"children\",\"screenListeners\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{CommonActions}from'@react-navigation/routers';import*as React from'react';import{isValidElementType}from'react-is';import Group from\"./Group\";import isArrayEqual from\"./isArrayEqual\";import isRecordEqual from\"./isRecordEqual\";import NavigationHelpersContext from\"./NavigationHelpersContext\";import NavigationRouteContext from\"./NavigationRouteContext\";import NavigationStateContext from\"./NavigationStateContext\";import PreventRemoveProvider from\"./PreventRemoveProvider\";import Screen from\"./Screen\";import{PrivateValueStore}from\"./types\";import useChildListeners from\"./useChildListeners\";import useComponent from\"./useComponent\";import useCurrentRender from\"./useCurrentRender\";import useDescriptors from\"./useDescriptors\";import useEventEmitter from\"./useEventEmitter\";import useFocusedListenersChildrenAdapter from\"./useFocusedListenersChildrenAdapter\";import useFocusEvents from\"./useFocusEvents\";import useKeyedChildListeners from\"./useKeyedChildListeners\";import useNavigationHelpers from\"./useNavigationHelpers\";import useOnAction from\"./useOnAction\";import useOnGetState from\"./useOnGetState\";import useOnRouteFocus from\"./useOnRouteFocus\";import useRegisterNavigator from\"./useRegisterNavigator\";import useScheduleUpdate from\"./useScheduleUpdate\";PrivateValueStore;var isValidKey=function isValidKey(key){return key===undefined||typeof key==='string'&&key!=='';};var getRouteConfigsFromChildren=function getRouteConfigsFromChildren(children,groupKey,groupOptions){var configs=React.Children.toArray(children).reduce(function(acc,child){var _child$type,_child$props;if(React.isValidElement(child)){if(child.type===Screen){if(!isValidKey(child.props.navigationKey)){throw new Error(\"Got an invalid 'navigationKey' prop (\"+JSON.stringify(child.props.navigationKey)+\") for the screen '\"+child.props.name+\"'. It must be a non-empty string or 'undefined'.\");}acc.push({keys:[groupKey,child.props.navigationKey],options:groupOptions,props:child.props});return acc;}if(child.type===React.Fragment||child.type===Group){if(!isValidKey(child.props.navigationKey)){throw new Error(\"Got an invalid 'navigationKey' prop (\"+JSON.stringify(child.props.navigationKey)+\") for the group. It must be a non-empty string or 'undefined'.\");}acc.push.apply(acc,_toConsumableArray(getRouteConfigsFromChildren(child.props.children,child.props.navigationKey,child.type!==Group?groupOptions:groupOptions!=null?[].concat(_toConsumableArray(groupOptions),[child.props.screenOptions]):[child.props.screenOptions])));return acc;}}throw new Error(\"A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found \"+(React.isValidElement(child)?\"'\"+(typeof child.type==='string'?child.type:(_child$type=child.type)===null||_child$type===void 0?void 0:_child$type.name)+\"'\"+((_child$props=child.props)!==null&&_child$props!==void 0&&_child$props.name?\" for the screen '\"+child.props.name+\"'\":''):typeof child==='object'?JSON.stringify(child):\"'\"+String(child)+\"'\")+\"). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.\");},[]);if(process.env.NODE_ENV!=='production'){configs.forEach(function(config){var _config$props=config.props,name=_config$props.name,children=_config$props.children,component=_config$props.component,getComponent=_config$props.getComponent;if(typeof name!=='string'||!name){throw new Error(\"Got an invalid name (\"+JSON.stringify(name)+\") for the screen. It must be a non-empty string.\");}if(children!=null||component!==undefined||getComponent!==undefined){if(children!=null&&component!==undefined){throw new Error(\"Got both 'component' and 'children' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(children!=null&&getComponent!==undefined){throw new Error(\"Got both 'getComponent' and 'children' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(component!==undefined&&getComponent!==undefined){throw new Error(\"Got both 'component' and 'getComponent' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(children!=null&&typeof children!=='function'){throw new Error(\"Got an invalid value for 'children' prop for the screen '\"+name+\"'. It must be a function returning a React Element.\");}if(component!==undefined&&!isValidElementType(component)){throw new Error(\"Got an invalid value for 'component' prop for the screen '\"+name+\"'. It must be a valid React Component.\");}if(getComponent!==undefined&&typeof getComponent!=='function'){throw new Error(\"Got an invalid value for 'getComponent' prop for the screen '\"+name+\"'. It must be a function returning a React Component.\");}if(typeof component==='function'){if(component.name==='component'){console.warn(\"Looks like you're passing an inline function for 'component' prop for the screen '\"+name+\"' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.\");}else if(/^[a-z]/.test(component.name)){console.warn(\"Got a component with the name '\"+component.name+\"' for the screen '\"+name+\"'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.\");}}}else{throw new Error(\"Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '\"+name+\"'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.\");}});}return configs;};export default function useNavigationBuilder(createRouter,options){var navigatorKey=useRegisterNavigator();var route=React.useContext(NavigationRouteContext);var children=options.children,screenListeners=options.screenListeners,rest=_objectWithoutProperties(options,_excluded);var _React$useRef=React.useRef(createRouter(_objectSpread(_objectSpread({},rest),route!==null&&route!==void 0&&route.params&&route.params.state==null&&route.params.initial!==false&&typeof route.params.screen==='string'?{initialRouteName:route.params.screen}:null))),router=_React$useRef.current;var routeConfigs=getRouteConfigsFromChildren(children);var screens=routeConfigs.reduce(function(acc,config){if(config.props.name in acc){throw new Error(\"A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '\"+config.props.name+\"')\");}acc[config.props.name]=config;return acc;},{});var routeNames=routeConfigs.map(function(config){return config.props.name;});var routeKeyList=routeNames.reduce(function(acc,curr){acc[curr]=screens[curr].keys.map(function(key){return key!=null?key:'';}).join(':');return acc;},{});var routeParamList=routeNames.reduce(function(acc,curr){var initialParams=screens[curr].props.initialParams;acc[curr]=initialParams;return acc;},{});var routeGetIdList=routeNames.reduce(function(acc,curr){return Object.assign(acc,_defineProperty({},curr,screens[curr].props.getId));},{});if(!routeNames.length){throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");}var isStateValid=React.useCallback(function(state){return state.type===undefined||state.type===router.type;},[router.type]);var isStateInitialized=React.useCallback(function(state){return state!==undefined&&state.stale===false&&isStateValid(state);},[isStateValid]);var _React$useContext=React.useContext(NavigationStateContext),currentState=_React$useContext.state,getCurrentState=_React$useContext.getState,setCurrentState=_React$useContext.setState,setKey=_React$useContext.setKey,getKey=_React$useContext.getKey,getIsInitial=_React$useContext.getIsInitial;var stateCleanedUp=React.useRef(false);var cleanUpState=React.useCallback(function(){setCurrentState(undefined);stateCleanedUp.current=true;},[setCurrentState]);var setState=React.useCallback(function(state){if(stateCleanedUp.current){return;}setCurrentState(state);},[setCurrentState]);var _React$useMemo=React.useMemo(function(){var _route$params4;var initialRouteParamList=routeNames.reduce(function(acc,curr){var _route$params,_route$params2,_route$params3;var initialParams=screens[curr].props.initialParams;var initialParamsFromParams=(route===null||route===void 0?void 0:(_route$params=route.params)===null||_route$params===void 0?void 0:_route$params.state)==null&&(route===null||route===void 0?void 0:(_route$params2=route.params)===null||_route$params2===void 0?void 0:_route$params2.initial)!==false&&(route===null||route===void 0?void 0:(_route$params3=route.params)===null||_route$params3===void 0?void 0:_route$params3.screen)===curr?route.params.params:undefined;acc[curr]=initialParams!==undefined||initialParamsFromParams!==undefined?_objectSpread(_objectSpread({},initialParams),initialParamsFromParams):undefined;return acc;},{});if((currentState===undefined||!isStateValid(currentState))&&(route===null||route===void 0?void 0:(_route$params4=route.params)===null||_route$params4===void 0?void 0:_route$params4.state)==null){return[router.getInitialState({routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),true];}else{var _ref;var _route$params5;return[router.getRehydratedState((_ref=route===null||route===void 0?void 0:(_route$params5=route.params)===null||_route$params5===void 0?void 0:_route$params5.state)!=null?_ref:currentState,{routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),false];}},[currentState,router,isStateValid]),_React$useMemo2=_slicedToArray(_React$useMemo,2),initializedState=_React$useMemo2[0],isFirstStateInitialization=_React$useMemo2[1];var previousRouteKeyListRef=React.useRef(routeKeyList);React.useEffect(function(){previousRouteKeyListRef.current=routeKeyList;});var previousRouteKeyList=previousRouteKeyListRef.current;var state=isStateInitialized(currentState)?currentState:initializedState;var nextState=state;if(!isArrayEqual(state.routeNames,routeNames)||!isRecordEqual(routeKeyList,previousRouteKeyList)){nextState=router.getStateForRouteNamesChange(state,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList,routeKeyChanges:Object.keys(routeKeyList).filter(function(name){return previousRouteKeyList.hasOwnProperty(name)&&routeKeyList[name]!==previousRouteKeyList[name];})});}var previousNestedParamsRef=React.useRef(route===null||route===void 0?void 0:route.params);React.useEffect(function(){previousNestedParamsRef.current=route===null||route===void 0?void 0:route.params;},[route===null||route===void 0?void 0:route.params]);if(route!==null&&route!==void 0&&route.params){var previousParams=previousNestedParamsRef.current;var action;if(typeof route.params.state==='object'&&route.params.state!=null&&route.params!==previousParams){action=CommonActions.reset(route.params.state);}else if(typeof route.params.screen==='string'&&(route.params.initial===false&&isFirstStateInitialization||route.params!==previousParams)){action=CommonActions.navigate({name:route.params.screen,params:route.params.params,path:route.params.path});}var updatedState=action?router.getStateForAction(nextState,action,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):null;nextState=updatedState!==null?router.getRehydratedState(updatedState,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):nextState;}var shouldUpdate=state!==nextState;useScheduleUpdate(function(){if(shouldUpdate){setState(nextState);}});state=nextState;React.useEffect(function(){setKey(navigatorKey);if(!getIsInitial()){setState(nextState);}return function(){setTimeout(function(){if(getCurrentState()!==undefined&&getKey()===navigatorKey){cleanUpState();}},0);};},[]);var initializedStateRef=React.useRef();initializedStateRef.current=initializedState;var getState=React.useCallback(function(){var currentState=getCurrentState();return isStateInitialized(currentState)?currentState:initializedStateRef.current;},[getCurrentState,isStateInitialized]);var emitter=useEventEmitter(function(e){var _ref2;var routeNames=[];var route;if(e.target){var _route;route=state.routes.find(function(route){return route.key===e.target;});if((_route=route)!==null&&_route!==void 0&&_route.name){routeNames.push(route.name);}}else{route=state.routes[state.index];routeNames.push.apply(routeNames,_toConsumableArray(Object.keys(screens).filter(function(name){var _route2;return((_route2=route)===null||_route2===void 0?void 0:_route2.name)===name;})));}if(route==null){return;}var navigation=descriptors[route.key].navigation;var listeners=(_ref2=[]).concat.apply(_ref2,_toConsumableArray([screenListeners].concat(_toConsumableArray(routeNames.map(function(name){var listeners=screens[name].props.listeners;return listeners;}))).map(function(listeners){var map=typeof listeners==='function'?listeners({route:route,navigation:navigation}):listeners;return map?Object.keys(map).filter(function(type){return type===e.type;}).map(function(type){return map===null||map===void 0?void 0:map[type];}):undefined;}))).filter(function(cb,i,self){return cb&&self.lastIndexOf(cb)===i;});listeners.forEach(function(listener){return listener===null||listener===void 0?void 0:listener(e);});});useFocusEvents({state:state,emitter:emitter});React.useEffect(function(){emitter.emit({type:'state',data:{state:state}});},[emitter,state]);var _useChildListeners=useChildListeners(),childListeners=_useChildListeners.listeners,addListener=_useChildListeners.addListener;var _useKeyedChildListene=useKeyedChildListeners(),keyedListeners=_useKeyedChildListene.keyedListeners,addKeyedListener=_useKeyedChildListene.addKeyedListener;var onAction=useOnAction({router:router,getState:getState,setState:setState,key:route===null||route===void 0?void 0:route.key,actionListeners:childListeners.action,beforeRemoveListeners:keyedListeners.beforeRemove,routerConfigOptions:{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList},emitter:emitter});var onRouteFocus=useOnRouteFocus({router:router,key:route===null||route===void 0?void 0:route.key,getState:getState,setState:setState});var navigation=useNavigationHelpers({id:options.id,onAction:onAction,getState:getState,emitter:emitter,router:router});useFocusedListenersChildrenAdapter({navigation:navigation,focusedListeners:childListeners.focus});useOnGetState({getState:getState,getStateListeners:keyedListeners.getState});var descriptors=useDescriptors({state:state,screens:screens,navigation:navigation,screenOptions:options.screenOptions,defaultScreenOptions:options.defaultScreenOptions,onAction:onAction,getState:getState,setState:setState,onRouteFocus:onRouteFocus,addListener:addListener,addKeyedListener:addKeyedListener,router:router,emitter:emitter});useCurrentRender({state:state,navigation:navigation,descriptors:descriptors});var NavigationContent=useComponent(function(children){return React.createElement(NavigationHelpersContext.Provider,{value:navigation},React.createElement(PreventRemoveProvider,null,children));});return{state:state,navigation:navigation,descriptors:descriptors,NavigationContent:NavigationContent};}","map":{"version":3,"sources":["useNavigationBuilder.tsx"],"names":["CommonActions","React","isValidElementType","Group","isArrayEqual","isRecordEqual","NavigationHelpersContext","NavigationRouteContext","NavigationStateContext","PreventRemoveProvider","Screen","PrivateValueStore","useChildListeners","useComponent","useCurrentRender","useDescriptors","useEventEmitter","useFocusedListenersChildrenAdapter","useFocusEvents","useKeyedChildListeners","useNavigationHelpers","useOnAction","useOnGetState","useOnRouteFocus","useRegisterNavigator","useScheduleUpdate","isValidKey","key","undefined","getRouteConfigsFromChildren","children","groupKey","groupOptions","configs","Children","toArray","reduce","acc","child","isValidElement","type","props","navigationKey","Error","JSON","stringify","name","push","keys","options","Fragment","screenOptions","String","process","env","NODE_ENV","forEach","config","component","getComponent","console","warn","test","useNavigationBuilder","createRouter","navigatorKey","route","useContext","screenListeners","rest","current","router","useRef","params","state","initial","screen","initialRouteName","routeConfigs","screens","routeNames","map","routeKeyList","curr","join","routeParamList","initialParams","routeGetIdList","Object","assign","getId","length","isStateValid","useCallback","isStateInitialized","stale","currentState","getState","getCurrentState","setState","setCurrentState","setKey","getKey","getIsInitial","stateCleanedUp","cleanUpState","initializedState","isFirstStateInitialization","useMemo","initialRouteParamList","initialParamsFromParams","getInitialState","getRehydratedState","previousRouteKeyListRef","useEffect","previousRouteKeyList","nextState","getStateForRouteNamesChange","routeKeyChanges","filter","hasOwnProperty","previousNestedParamsRef","previousParams","action","reset","navigate","path","updatedState","getStateForAction","shouldUpdate","setTimeout","initializedStateRef","emitter","e","target","routes","find","index","navigation","descriptors","listeners","concat","cb","i","self","lastIndexOf","listener","emit","data","childListeners","addListener","keyedListeners","addKeyedListener","onAction","actionListeners","beforeRemoveListeners","beforeRemove","routerConfigOptions","onRouteFocus","id","focusedListeners","focus","getStateListeners","defaultScreenOptions","NavigationContent"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import { CommonActions } from '@react-navigation/routers';\nimport * as React from 'react';\nimport { isValidElementType } from 'react-is';\nimport Group from './Group';\nimport isArrayEqual from './isArrayEqual';\nimport isRecordEqual from './isRecordEqual';\nimport NavigationHelpersContext from './NavigationHelpersContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport PreventRemoveProvider from './PreventRemoveProvider';\nimport Screen from './Screen';\nimport { PrivateValueStore } from './types';\nimport useChildListeners from './useChildListeners';\nimport useComponent from './useComponent';\nimport useCurrentRender from './useCurrentRender';\nimport useDescriptors from './useDescriptors';\nimport useEventEmitter from './useEventEmitter';\nimport useFocusedListenersChildrenAdapter from './useFocusedListenersChildrenAdapter';\nimport useFocusEvents from './useFocusEvents';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useNavigationHelpers from './useNavigationHelpers';\nimport useOnAction from './useOnAction';\nimport useOnGetState from './useOnGetState';\nimport useOnRouteFocus from './useOnRouteFocus';\nimport useRegisterNavigator from './useRegisterNavigator';\nimport useScheduleUpdate from './useScheduleUpdate';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\nconst isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n/**\n * Extract route config object from React children elements.\n *\n * @param children React Elements to extract the config from.\n */\nconst getRouteConfigsFromChildren = (children, groupKey, groupOptions) => {\n  const configs = React.Children.toArray(children).reduce((acc, child) => {\n    var _child$type, _child$props;\n    if ( /*#__PURE__*/React.isValidElement(child)) {\n      if (child.type === Screen) {\n        // We can only extract the config from `Screen` elements\n        // If something else was rendered, it's probably a bug\n\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n        }\n        acc.push({\n          keys: [groupKey, child.props.navigationKey],\n          options: groupOptions,\n          props: child.props\n        });\n        return acc;\n      }\n      if (child.type === React.Fragment || child.type === Group) {\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n        }\n\n        // When we encounter a fragment or group, we need to dive into its children to extract the configs\n        // This is handy to conditionally define a group of screens\n        acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey, child.type !== Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions]));\n        return acc;\n      }\n    }\n    throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : (_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.name}'${(_child$props = child.props) !== null && _child$props !== void 0 && _child$props.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n  }, []);\n  if (process.env.NODE_ENV !== 'production') {\n    configs.forEach(config => {\n      const {\n        name,\n        children,\n        component,\n        getComponent\n      } = config.props;\n      if (typeof name !== 'string' || !name) {\n        throw new Error(`Got an invalid name (${JSON.stringify(name)}) for the screen. It must be a non-empty string.`);\n      }\n      if (children != null || component !== undefined || getComponent !== undefined) {\n        if (children != null && component !== undefined) {\n          throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n        }\n        if (children != null && getComponent !== undefined) {\n          throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n        }\n        if (component !== undefined && getComponent !== undefined) {\n          throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n        }\n        if (children != null && typeof children !== 'function') {\n          throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n        }\n        if (component !== undefined && !isValidElementType(component)) {\n          throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n        }\n        if (getComponent !== undefined && typeof getComponent !== 'function') {\n          throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n        }\n        if (typeof component === 'function') {\n          if (component.name === 'component') {\n            // Inline anonymous functions passed in the `component` prop will have the name of the prop\n            // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n            // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n            console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n          } else if (/^[a-z]/.test(component.name)) {\n            console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n          }\n        }\n      } else {\n        throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n      }\n    });\n  }\n  return configs;\n};\n\n/**\n * Hook for building navigators.\n *\n * @param createRouter Factory method which returns router object.\n * @param options Options object containing `children` and additional options for the router.\n * @returns An object containing `state`, `navigation`, `descriptors` objects.\n */\nexport default function useNavigationBuilder(createRouter, options) {\n  const navigatorKey = useRegisterNavigator();\n  const route = React.useContext(NavigationRouteContext);\n  const {\n    children,\n    screenListeners,\n    ...rest\n  } = options;\n  const {\n    current: router\n  } = React.useRef(createRouter({\n    ...rest,\n    ...(route !== null && route !== void 0 && route.params && route.params.state == null && route.params.initial !== false && typeof route.params.screen === 'string' ? {\n      initialRouteName: route.params.screen\n    } : null)\n  }));\n  const routeConfigs = getRouteConfigsFromChildren(children);\n  const screens = routeConfigs.reduce((acc, config) => {\n    if (config.props.name in acc) {\n      throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n    }\n    acc[config.props.name] = config;\n    return acc;\n  }, {});\n  const routeNames = routeConfigs.map(config => config.props.name);\n  const routeKeyList = routeNames.reduce((acc, curr) => {\n    acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n    return acc;\n  }, {});\n  const routeParamList = routeNames.reduce((acc, curr) => {\n    const {\n      initialParams\n    } = screens[curr].props;\n    acc[curr] = initialParams;\n    return acc;\n  }, {});\n  const routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n    [curr]: screens[curr].props.getId\n  }), {});\n  if (!routeNames.length) {\n    throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n  }\n  const isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n  const isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n  const {\n    state: currentState,\n    getState: getCurrentState,\n    setState: setCurrentState,\n    setKey,\n    getKey,\n    getIsInitial\n  } = React.useContext(NavigationStateContext);\n  const stateCleanedUp = React.useRef(false);\n  const cleanUpState = React.useCallback(() => {\n    setCurrentState(undefined);\n    stateCleanedUp.current = true;\n  }, [setCurrentState]);\n  const setState = React.useCallback(state => {\n    if (stateCleanedUp.current) {\n      // State might have been already cleaned up due to unmount\n      // We do not want to expose API allowing to override this\n      // This would lead to old data preservation on main navigator unmount\n      return;\n    }\n    setCurrentState(state);\n  }, [setCurrentState]);\n  const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n    var _route$params4;\n    const initialRouteParamList = routeNames.reduce((acc, curr) => {\n      var _route$params, _route$params2, _route$params3;\n      const {\n        initialParams\n      } = screens[curr].props;\n      const initialParamsFromParams = (route === null || route === void 0 ? void 0 : (_route$params = route.params) === null || _route$params === void 0 ? void 0 : _route$params.state) == null && (route === null || route === void 0 ? void 0 : (_route$params2 = route.params) === null || _route$params2 === void 0 ? void 0 : _route$params2.initial) !== false && (route === null || route === void 0 ? void 0 : (_route$params3 = route.params) === null || _route$params3 === void 0 ? void 0 : _route$params3.screen) === curr ? route.params.params : undefined;\n      acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? {\n        ...initialParams,\n        ...initialParamsFromParams\n      } : undefined;\n      return acc;\n    }, {});\n\n    // If the current state isn't initialized on first render, we initialize it\n    // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n    // Otherwise assume that the state was provided as initial state\n    // So we need to rehydrate it to make it usable\n    if ((currentState === undefined || !isStateValid(currentState)) && (route === null || route === void 0 ? void 0 : (_route$params4 = route.params) === null || _route$params4 === void 0 ? void 0 : _route$params4.state) == null) {\n      return [router.getInitialState({\n        routeNames,\n        routeParamList: initialRouteParamList,\n        routeGetIdList\n      }), true];\n    } else {\n      var _route$params5;\n      return [router.getRehydratedState((route === null || route === void 0 ? void 0 : (_route$params5 = route.params) === null || _route$params5 === void 0 ? void 0 : _route$params5.state) ?? currentState, {\n        routeNames,\n        routeParamList: initialRouteParamList,\n        routeGetIdList\n      }), false];\n    }\n    // We explicitly don't include routeNames, route.params etc. in the dep list\n    // below. We want to avoid forcing a new state to be calculated in those cases\n    // Instead, we handle changes to these in the nextState code below. Note\n    // that some changes to routeConfigs are explicitly ignored, such as changes\n    // to initialParams\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentState, router, isStateValid]);\n  const previousRouteKeyListRef = React.useRef(routeKeyList);\n  React.useEffect(() => {\n    previousRouteKeyListRef.current = routeKeyList;\n  });\n  const previousRouteKeyList = previousRouteKeyListRef.current;\n  let state =\n  // If the state isn't initialized, or stale, use the state we initialized instead\n  // The state won't update until there's a change needed in the state we have initalized locally\n  // So it'll be `undefined` or stale until the first navigation event happens\n  isStateInitialized(currentState) ? currentState : initializedState;\n  let nextState = state;\n  if (!isArrayEqual(state.routeNames, routeNames) || !isRecordEqual(routeKeyList, previousRouteKeyList)) {\n    // When the list of route names change, the router should handle it to remove invalid routes\n    nextState = router.getStateForRouteNamesChange(state, {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n      routeKeyChanges: Object.keys(routeKeyList).filter(name => previousRouteKeyList.hasOwnProperty(name) && routeKeyList[name] !== previousRouteKeyList[name])\n    });\n  }\n  const previousNestedParamsRef = React.useRef(route === null || route === void 0 ? void 0 : route.params);\n  React.useEffect(() => {\n    previousNestedParamsRef.current = route === null || route === void 0 ? void 0 : route.params;\n  }, [route === null || route === void 0 ? void 0 : route.params]);\n  if (route !== null && route !== void 0 && route.params) {\n    const previousParams = previousNestedParamsRef.current;\n    let action;\n    if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n      // If the route was updated with new state, we should reset to it\n      action = CommonActions.reset(route.params.state);\n    } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n      // If the route was updated with new screen name and/or params, we should navigate there\n      action = CommonActions.navigate({\n        name: route.params.screen,\n        params: route.params.params,\n        path: route.params.path\n      });\n    }\n\n    // The update should be limited to current navigator only, so we call the router manually\n    const updatedState = action ? router.getStateForAction(nextState, action, {\n      routeNames,\n      routeParamList,\n      routeGetIdList\n    }) : null;\n    nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n      routeNames,\n      routeParamList,\n      routeGetIdList\n    }) : nextState;\n  }\n  const shouldUpdate = state !== nextState;\n  useScheduleUpdate(() => {\n    if (shouldUpdate) {\n      // If the state needs to be updated, we'll schedule an update\n      setState(nextState);\n    }\n  });\n\n  // The up-to-date state will come in next render, but we don't need to wait for it\n  // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n  // So we override the state object we return to use the latest state as soon as possible\n  state = nextState;\n  React.useEffect(() => {\n    setKey(navigatorKey);\n    if (!getIsInitial()) {\n      // If it's not initial render, we need to update the state\n      // This will make sure that our container gets notifier of state changes due to new mounts\n      // This is necessary for proper screen tracking, URL updates etc.\n      setState(nextState);\n    }\n    return () => {\n      // We need to clean up state for this navigator on unmount\n      // We do it in a timeout because we need to detect if another navigator mounted in the meantime\n      // For example, if another navigator has started rendering, we should skip cleanup\n      // Otherwise, our cleanup step will cleanup state for the other navigator and re-initialize it\n      setTimeout(() => {\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          cleanUpState();\n        }\n      }, 0);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // We initialize this ref here to avoid a new getState getting initialized\n  // whenever initializedState changes. We want getState to have access to the\n  // latest initializedState, but don't need it to change when that happens\n  const initializedStateRef = React.useRef();\n  initializedStateRef.current = initializedState;\n  const getState = React.useCallback(() => {\n    const currentState = getCurrentState();\n    return isStateInitialized(currentState) ? currentState : initializedStateRef.current;\n  }, [getCurrentState, isStateInitialized]);\n  const emitter = useEventEmitter(e => {\n    let routeNames = [];\n    let route;\n    if (e.target) {\n      var _route;\n      route = state.routes.find(route => route.key === e.target);\n      if ((_route = route) !== null && _route !== void 0 && _route.name) {\n        routeNames.push(route.name);\n      }\n    } else {\n      route = state.routes[state.index];\n      routeNames.push(...Object.keys(screens).filter(name => {\n        var _route2;\n        return ((_route2 = route) === null || _route2 === void 0 ? void 0 : _route2.name) === name;\n      }));\n    }\n    if (route == null) {\n      return;\n    }\n    const navigation = descriptors[route.key].navigation;\n    const listeners = [].concat(\n    // Get an array of listeners for all screens + common listeners on navigator\n    ...[screenListeners, ...routeNames.map(name => {\n      const {\n        listeners\n      } = screens[name].props;\n      return listeners;\n    })].map(listeners => {\n      const map = typeof listeners === 'function' ? listeners({\n        route: route,\n        navigation\n      }) : listeners;\n      return map ? Object.keys(map).filter(type => type === e.type).map(type => map === null || map === void 0 ? void 0 : map[type]) : undefined;\n    }))\n    // We don't want same listener to be called multiple times for same event\n    // So we remove any duplicate functions from the array\n    .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n    listeners.forEach(listener => listener === null || listener === void 0 ? void 0 : listener(e));\n  });\n  useFocusEvents({\n    state,\n    emitter\n  });\n  React.useEffect(() => {\n    emitter.emit({\n      type: 'state',\n      data: {\n        state\n      }\n    });\n  }, [emitter, state]);\n  const {\n    listeners: childListeners,\n    addListener\n  } = useChildListeners();\n  const {\n    keyedListeners,\n    addKeyedListener\n  } = useKeyedChildListeners();\n  const onAction = useOnAction({\n    router,\n    getState,\n    setState,\n    key: route === null || route === void 0 ? void 0 : route.key,\n    actionListeners: childListeners.action,\n    beforeRemoveListeners: keyedListeners.beforeRemove,\n    routerConfigOptions: {\n      routeNames,\n      routeParamList,\n      routeGetIdList\n    },\n    emitter\n  });\n  const onRouteFocus = useOnRouteFocus({\n    router,\n    key: route === null || route === void 0 ? void 0 : route.key,\n    getState,\n    setState\n  });\n  const navigation = useNavigationHelpers({\n    id: options.id,\n    onAction,\n    getState,\n    emitter,\n    router\n  });\n  useFocusedListenersChildrenAdapter({\n    navigation,\n    focusedListeners: childListeners.focus\n  });\n  useOnGetState({\n    getState,\n    getStateListeners: keyedListeners.getState\n  });\n  const descriptors = useDescriptors({\n    state,\n    screens,\n    navigation,\n    screenOptions: options.screenOptions,\n    defaultScreenOptions: options.defaultScreenOptions,\n    onAction,\n    getState,\n    setState,\n    onRouteFocus,\n    addListener,\n    addKeyedListener,\n    router,\n    // @ts-expect-error: this should have both core and custom events, but too much work right now\n    emitter\n  });\n  useCurrentRender({\n    state,\n    navigation,\n    descriptors\n  });\n  const NavigationContent = useComponent(children => /*#__PURE__*/React.createElement(NavigationHelpersContext.Provider, {\n    value: navigation\n  }, /*#__PURE__*/React.createElement(PreventRemoveProvider, null, children)));\n  return {\n    state,\n    navigation,\n    descriptors,\n    NavigationContent\n  };\n}\n//# sourceMappingURL=useNavigationBuilder.js.map"]},"metadata":{},"sourceType":"module"}