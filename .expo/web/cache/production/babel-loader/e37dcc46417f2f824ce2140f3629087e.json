{"ast":null,"code":"import*as React from'react';import NavigationBuilderContext from\"./NavigationBuilderContext\";export default function useFocusedListenersChildrenAdapter(_ref){var navigation=_ref.navigation,focusedListeners=_ref.focusedListeners;var _React$useContext=React.useContext(NavigationBuilderContext),addListener=_React$useContext.addListener;var listener=React.useCallback(function(callback){if(navigation.isFocused()){for(var _listener2 of focusedListeners){var _listener3=_listener2(callback),handled=_listener3.handled,result=_listener3.result;if(handled){return{handled:handled,result:result};}}return{handled:true,result:callback(navigation)};}else{return{handled:false,result:null};}},[focusedListeners,navigation]);React.useEffect(function(){return addListener===null||addListener===void 0?void 0:addListener('focus',listener);},[addListener,listener]);}","map":{"version":3,"sources":["useFocusedListenersChildrenAdapter.tsx"],"names":["React","NavigationBuilderContext","useFocusedListenersChildrenAdapter","navigation","focusedListeners","addListener","useContext","listener","useCallback","callback","isFocused","handled","result","useEffect"],"mappings":"AACA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAEA,MAAOC,yBAAP,kCAcA,cAAe,SAASC,mCAAT,CAA2C,IAA3C,CAGH,CAH+C,GACzDC,WADyD,CAGjD,IAHiD,CACzDA,UADyD,CAEzDC,gBAFyD,CAGjD,IAHiD,CAEzDA,gBAFyD,CAIzD,sBAAwBJ,KAAK,CAACM,UAANN,CAAiBC,wBAAjBD,CAAxB,CAAQK,WAAR,mBAAQA,WAAR,CAEA,GAAME,SAAQ,CAAGP,KAAK,CAACQ,WAANR,CACdS,SAAAA,QAAwC,CAAK,CAC5C,GAAIN,UAAU,CAACO,SAAXP,EAAJ,CAA4B,CAC1B,IAAK,GAAMI,WAAX,GAAuBH,iBAAvB,CAAyC,CACvC,eAA4BG,UAAQ,CAACE,QAAD,CAApC,CAAQE,OAAR,YAAQA,OAAR,CAAiBC,MAAjB,YAAiBA,MAAjB,CAEA,GAAID,OAAJ,CAAa,CACX,MAAO,CAAEA,OAAO,CAAPA,OAAF,CAAWC,MAAAA,CAAAA,MAAX,CAAP,CACF,CACF,CAEA,MAAO,CAAED,OAAO,CAAE,IAAX,CAAiBC,MAAM,CAAEH,QAAQ,CAACN,UAAD,CAAjC,CAAP,CACD,CAVD,IAUO,CACL,MAAO,CAAEQ,OAAO,CAAE,KAAX,CAAkBC,MAAM,CAAE,IAA1B,CAAP,CACF,CACD,CAfcZ,CAgBf,CAACI,gBAAD,CAAmBD,UAAnB,CAhBeH,CAAjB,CAmBAA,KAAK,CAACa,SAANb,CACE,iBAAMK,YAAW,GAAA,IAAXA,EAAAA,WAAW,GAAA,IAAA,EAAXA,CAAW,IAAA,EAAXA,CAAAA,WAAW,CAAG,OAAH,CAAYE,QAAZ,CAAjB,EADFP,CAEE,CAACK,WAAD,CAAcE,QAAd,CAFFP,EAIF","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\n/**\n * Hook for passing focus callback to children\n */\nexport default function useFocusedListenersChildrenAdapter(_ref) {\n  let {\n    navigation,\n    focusedListeners\n  } = _ref;\n  const {\n    addListener\n  } = React.useContext(NavigationBuilderContext);\n  const listener = React.useCallback(callback => {\n    if (navigation.isFocused()) {\n      for (const listener of focusedListeners) {\n        const {\n          handled,\n          result\n        } = listener(callback);\n        if (handled) {\n          return {\n            handled,\n            result\n          };\n        }\n      }\n      return {\n        handled: true,\n        result: callback(navigation)\n      };\n    } else {\n      return {\n        handled: false,\n        result: null\n      };\n    }\n  }, [focusedListeners, navigation]);\n  React.useEffect(() => addListener === null || addListener === void 0 ? void 0 : addListener('focus', listener), [addListener, listener]);\n}\n//# sourceMappingURL=useFocusedListenersChildrenAdapter.js.map"]},"metadata":{},"sourceType":"module"}