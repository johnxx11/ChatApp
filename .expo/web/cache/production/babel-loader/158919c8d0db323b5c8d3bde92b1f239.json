{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import isArrayEqual from\"./isArrayEqual\";import NavigationBuilderContext from\"./NavigationBuilderContext\";import NavigationRouteContext from\"./NavigationRouteContext\";export default function useOnGetState(_ref){var getState=_ref.getState,getStateListeners=_ref.getStateListeners;var _React$useContext=React.useContext(NavigationBuilderContext),addKeyedListener=_React$useContext.addKeyedListener;var route=React.useContext(NavigationRouteContext);var key=route?route.key:'root';var getRehydratedState=React.useCallback(function(){var state=getState();var routes=state.routes.map(function(route){var _getStateListeners$ro;var childState=(_getStateListeners$ro=getStateListeners[route.key])===null||_getStateListeners$ro===void 0?void 0:_getStateListeners$ro.call(getStateListeners);if(route.state===childState){return route;}return _objectSpread(_objectSpread({},route),{},{state:childState});});if(isArrayEqual(state.routes,routes)){return state;}return _objectSpread(_objectSpread({},state),{},{routes:routes});},[getState,getStateListeners]);React.useEffect(function(){return addKeyedListener===null||addKeyedListener===void 0?void 0:addKeyedListener('getState',key,getRehydratedState);},[addKeyedListener,getRehydratedState,key]);}","map":{"version":3,"sources":["useOnGetState.tsx"],"names":["React","isArrayEqual","NavigationBuilderContext","NavigationRouteContext","useOnGetState","getState","getStateListeners","addKeyedListener","useContext","route","key","getRehydratedState","useCallback","state","routes","map","childState","useEffect"],"mappings":"w0BACA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAEA,MAAOC,aAAP,sBACA,MAAOC,yBAAP,kCAGA,MAAOC,uBAAP,gCAOA,cAAe,SAASC,cAAT,CAAsB,IAAtB,CAGH,CAH0B,GACpCC,SADoC,CAG5B,IAH4B,CACpCA,QADoC,CAEpCC,iBAFoC,CAG5B,IAH4B,CAEpCA,iBAFoC,CAIpC,sBAA6BN,KAAK,CAACQ,UAANR,CAAiBE,wBAAjBF,CAA7B,CAAQO,gBAAR,mBAAQA,gBAAR,CACA,GAAME,MAAK,CAAGT,KAAK,CAACQ,UAANR,CAAiBG,sBAAjBH,CAAd,CACA,GAAMU,IAAG,CAAGD,KAAK,CAAGA,KAAK,CAACC,GAAT,CAAe,MAAhC,CAEA,GAAMC,mBAAkB,CAAGX,KAAK,CAACY,WAANZ,CAAkB,UAAM,CACjD,GAAMa,MAAK,CAAGR,QAAQ,EAAtB,CAGA,GAAMS,OAAM,CAAGD,KAAK,CAACC,MAAND,CAAaE,GAAbF,CAAkBJ,SAAAA,KAAK,CAAK,CAAA,GAAA,sBAAA,CACzC,GAAMO,WAAU,CAAA,CAAA,qBAAA,CAAGV,iBAAiB,CAACG,KAAK,CAACC,GAAP,CAApB,IAA+B,IAA/B,EAA+B,qBAAA,GAAA,IAAA,EAA/B,CAA+B,IAAA,EAA/B,CAAGJ,qBAAAA,CAAAA,IAAAA,CAAAA,iBAAAA,CAAnB,CAEA,GAAIG,KAAK,CAACI,KAANJ,GAAgBO,UAApB,CAAgC,CAC9B,MAAOP,MAAP,CACF,CAEA,sCAAYA,KAAZ,MAAmBI,KAAK,CAAEG,UAA1B,GACD,CARcH,CAAf,CAUA,GAAIZ,YAAY,CAACY,KAAK,CAACC,MAAP,CAAeA,MAAf,CAAhB,CAAwC,CACtC,MAAOD,MAAP,CACF,CAEA,sCAAYA,KAAZ,MAAmBC,MAAAA,CAAAA,MAAnB,GACD,CAnB0Bd,CAmBxB,CAACK,QAAD,CAAWC,iBAAX,CAnBwBN,CAA3B,CAqBAA,KAAK,CAACiB,SAANjB,CAAgB,UAAM,CACpB,MAAOO,iBAAgB,GAAA,IAAhBA,EAAAA,gBAAgB,GAAA,IAAA,EAAhBA,CAAgB,IAAA,EAAhBA,CAAAA,gBAAgB,CAAG,UAAH,CAAeG,GAAf,CAAoBC,kBAApB,CAAvB,CACD,CAFDX,CAEG,CAACO,gBAAD,CAAmBI,kBAAnB,CAAuCD,GAAvC,CAFHV,EAGF","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport isArrayEqual from './isArrayEqual';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nexport default function useOnGetState(_ref) {\n  let {\n    getState,\n    getStateListeners\n  } = _ref;\n  const {\n    addKeyedListener\n  } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n\n    // Avoid returning new route objects if we don't need to\n    const routes = state.routes.map(route => {\n      var _getStateListeners$ro;\n      const childState = (_getStateListeners$ro = getStateListeners[route.key]) === null || _getStateListeners$ro === void 0 ? void 0 : _getStateListeners$ro.call(getStateListeners);\n      if (route.state === childState) {\n        return route;\n      }\n      return {\n        ...route,\n        state: childState\n      };\n    });\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n    return {\n      ...state,\n      routes\n    };\n  }, [getState, getStateListeners]);\n  React.useEffect(() => {\n    return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}\n//# sourceMappingURL=useOnGetState.js.map"]},"metadata":{},"sourceType":"module"}