{"ast":null,"code":"import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"enabled\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{State}from\"../../State\";import{EventTypes}from\"../interfaces\";import GestureHandler from\"./GestureHandler\";var DEFAULT_MAX_DURATION_MS=500;var DEFAULT_MAX_DELAY_MS=500;var DEFAULT_NUMBER_OF_TAPS=1;var DEFAULT_MIN_NUMBER_OF_POINTERS=1;var TapGestureHandler=function(_GestureHandler){_inherits(TapGestureHandler,_GestureHandler);var _super=_createSuper(TapGestureHandler);function TapGestureHandler(){var _this;_classCallCheck(this,TapGestureHandler);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"maxDeltaX\",Number.MIN_SAFE_INTEGER);_defineProperty(_assertThisInitialized(_this),\"maxDeltaY\",Number.MIN_SAFE_INTEGER);_defineProperty(_assertThisInitialized(_this),\"maxDistSq\",Number.MIN_SAFE_INTEGER);_defineProperty(_assertThisInitialized(_this),\"maxDurationMs\",DEFAULT_MAX_DURATION_MS);_defineProperty(_assertThisInitialized(_this),\"maxDelayMs\",DEFAULT_MAX_DELAY_MS);_defineProperty(_assertThisInitialized(_this),\"numberOfTaps\",DEFAULT_NUMBER_OF_TAPS);_defineProperty(_assertThisInitialized(_this),\"minNumberOfPointers\",DEFAULT_MIN_NUMBER_OF_POINTERS);_defineProperty(_assertThisInitialized(_this),\"currentMaxNumberOfPointers\",1);_defineProperty(_assertThisInitialized(_this),\"startX\",0);_defineProperty(_assertThisInitialized(_this),\"startY\",0);_defineProperty(_assertThisInitialized(_this),\"offsetX\",0);_defineProperty(_assertThisInitialized(_this),\"offsetY\",0);_defineProperty(_assertThisInitialized(_this),\"lastX\",0);_defineProperty(_assertThisInitialized(_this),\"lastY\",0);_defineProperty(_assertThisInitialized(_this),\"waitTimeout\",void 0);_defineProperty(_assertThisInitialized(_this),\"delayTimeout\",void 0);_defineProperty(_assertThisInitialized(_this),\"tapsSoFar\",0);return _this;}_createClass(TapGestureHandler,[{key:\"init\",value:function init(ref,propsRef){_get(_getPrototypeOf(TapGestureHandler.prototype),\"init\",this).call(this,ref,propsRef);this.setShouldCancelWhenOutside(true);}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref){var _ref$enabled=_ref.enabled,enabled=_ref$enabled===void 0?true:_ref$enabled,props=_objectWithoutProperties(_ref,_excluded);_get(_getPrototypeOf(TapGestureHandler.prototype),\"updateGestureConfig\",this).call(this,_objectSpread({enabled:enabled},props));if(this.config.numberOfTaps!==undefined){this.numberOfTaps=this.config.numberOfTaps;}if(this.config.maxDurationMs!==undefined){this.maxDurationMs=this.config.maxDurationMs;}if(this.config.maxDelayMs!==undefined){this.maxDelayMs=this.config.maxDelayMs;}if(this.config.maxDeltaX!==undefined){this.maxDeltaX=this.config.maxDeltaX;}if(this.config.maxDeltaY!==undefined){this.maxDeltaY=this.config.maxDeltaY;}if(this.config.maxDist!==undefined){this.maxDistSq=this.config.maxDist*this.config.maxDist;}if(this.config.minPointers!==undefined){this.minNumberOfPointers=this.config.minPointers;}}},{key:\"resetConfig\",value:function resetConfig(){_get(_getPrototypeOf(TapGestureHandler.prototype),\"resetConfig\",this).call(this);this.maxDeltaX=Number.MIN_SAFE_INTEGER;this.maxDeltaY=Number.MIN_SAFE_INTEGER;this.maxDistSq=Number.MIN_SAFE_INTEGER;this.maxDurationMs=DEFAULT_MAX_DURATION_MS;this.maxDelayMs=DEFAULT_MAX_DELAY_MS;this.numberOfTaps=DEFAULT_NUMBER_OF_TAPS;this.minNumberOfPointers=DEFAULT_MIN_NUMBER_OF_POINTERS;}},{key:\"transformNativeEvent\",value:function transformNativeEvent(){var rect=this.view.getBoundingClientRect();return{x:this.tracker.getLastAvgX()-rect.left,y:this.tracker.getLastAvgY()-rect.top,absoluteX:this.tracker.getLastAvgX(),absoluteY:this.tracker.getLastAvgY()};}},{key:\"clearTimeouts\",value:function clearTimeouts(){clearTimeout(this.waitTimeout);clearTimeout(this.delayTimeout);}},{key:\"startTap\",value:function startTap(){var _this2=this;this.clearTimeouts();this.waitTimeout=setTimeout(function(){return _this2.fail();},this.maxDurationMs);}},{key:\"endTap\",value:function endTap(){var _this3=this;this.clearTimeouts();if(++this.tapsSoFar===this.numberOfTaps&&this.currentMaxNumberOfPointers>=this.minNumberOfPointers){this.activate();}else{this.delayTimeout=setTimeout(function(){return _this3.fail();},this.maxDelayMs);}}},{key:\"onPointerDown\",value:function onPointerDown(event){this.tracker.addToTracker(event);_get(_getPrototypeOf(TapGestureHandler.prototype),\"onPointerDown\",this).call(this,event);this.trySettingPosition(event);this.startX=event.x;this.startY=event.y;this.lastX=event.x;this.lastY=event.y;this.updateState(event);}},{key:\"onPointerAdd\",value:function onPointerAdd(event){_get(_getPrototypeOf(TapGestureHandler.prototype),\"onPointerAdd\",this).call(this,event);this.tracker.addToTracker(event);this.trySettingPosition(event);this.offsetX+=this.lastX-this.startX;this.offsetY+=this.lastY-this.startY;this.lastX=this.tracker.getLastAvgX();this.lastY=this.tracker.getLastAvgY();this.startX=this.tracker.getLastAvgX();this.startY=this.tracker.getLastAvgY();this.updateState(event);}},{key:\"onPointerUp\",value:function onPointerUp(event){_get(_getPrototypeOf(TapGestureHandler.prototype),\"onPointerUp\",this).call(this,event);this.lastX=this.tracker.getLastAvgX();this.lastY=this.tracker.getLastAvgY();this.tracker.removeFromTracker(event.pointerId);this.updateState(event);}},{key:\"onPointerRemove\",value:function onPointerRemove(event){_get(_getPrototypeOf(TapGestureHandler.prototype),\"onPointerRemove\",this).call(this,event);this.tracker.removeFromTracker(event.pointerId);this.offsetX+=this.lastX-this.startX;this.offsetY+=this.lastY=this.startY;this.lastX=this.tracker.getLastAvgX();this.lastY=this.tracker.getLastAvgY();this.startX=this.lastX;this.startY=this.lastY;this.updateState(event);}},{key:\"onPointerMove\",value:function onPointerMove(event){this.trySettingPosition(event);this.tracker.track(event);this.lastX=this.tracker.getLastAvgX();this.lastY=this.tracker.getLastAvgY();this.updateState(event);_get(_getPrototypeOf(TapGestureHandler.prototype),\"onPointerMove\",this).call(this,event);}},{key:\"onPointerOutOfBounds\",value:function onPointerOutOfBounds(event){this.trySettingPosition(event);this.tracker.track(event);this.lastX=this.tracker.getLastAvgX();this.lastY=this.tracker.getLastAvgY();this.updateState(event);_get(_getPrototypeOf(TapGestureHandler.prototype),\"onPointerOutOfBounds\",this).call(this,event);}},{key:\"onPointerCancel\",value:function onPointerCancel(event){_get(_getPrototypeOf(TapGestureHandler.prototype),\"onPointerCancel\",this).call(this,event);this.tracker.resetTracker();this.fail();}},{key:\"updateState\",value:function updateState(event){if(this.currentMaxNumberOfPointers<this.tracker.getTrackedPointersCount()){this.currentMaxNumberOfPointers=this.tracker.getTrackedPointersCount();}if(this.shouldFail()){this.fail();return;}switch(this.currentState){case State.UNDETERMINED:if(event.eventType===EventTypes.DOWN){this.begin();}this.startTap();break;case State.BEGAN:if(event.eventType===EventTypes.UP){this.endTap();}if(event.eventType===EventTypes.DOWN){this.startTap();}break;default:break;}}},{key:\"trySettingPosition\",value:function trySettingPosition(event){if(this.currentState!==State.UNDETERMINED){return;}this.offsetX=0;this.offsetY=0;this.startX=event.x;this.startY=event.y;}},{key:\"shouldFail\",value:function shouldFail(){var dx=this.lastX-this.startX+this.offsetX;if(this.maxDeltaX!==Number.MIN_SAFE_INTEGER&&Math.abs(dx)>this.maxDeltaX){return true;}var dy=this.lastY-this.startY+this.offsetY;if(this.maxDeltaY!==Number.MIN_SAFE_INTEGER&&Math.abs(dy)>this.maxDeltaY){return true;}var distSq=dy*dy+dx*dx;return this.maxDistSq!==Number.MIN_SAFE_INTEGER&&distSq>this.maxDistSq;}},{key:\"activate\",value:function activate(){_get(_getPrototypeOf(TapGestureHandler.prototype),\"activate\",this).call(this);this.end();}},{key:\"onCancel\",value:function onCancel(){this.resetProgress();this.clearTimeouts();}},{key:\"resetProgress\",value:function resetProgress(){this.clearTimeouts();this.tapsSoFar=0;this.currentMaxNumberOfPointers=0;}}]);return TapGestureHandler;}(GestureHandler);export{TapGestureHandler as default};","map":{"version":3,"sources":["TapGestureHandler.ts"],"names":["DEFAULT_MAX_DURATION_MS","DEFAULT_MAX_DELAY_MS","DEFAULT_NUMBER_OF_TAPS","DEFAULT_MIN_NUMBER_OF_POINTERS","Number","init","updateGestureConfig","enabled","props","resetConfig","transformNativeEvent","rect","x","y","absoluteX","absoluteY","clearTimeouts","clearTimeout","startTap","setTimeout","endTap","onPointerDown","event","onPointerAdd","onPointerUp","onPointerRemove","onPointerMove","onPointerOutOfBounds","onPointerCancel","updateState","State","EventTypes","trySettingPosition","shouldFail","dx","Math","dy","distSq","activate","onCancel","resetProgress"],"mappings":"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","sourcesContent":["import { State } from '../../State';\nimport { AdaptedEvent, Config, EventTypes } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MAX_DURATION_MS = 500;\nconst DEFAULT_MAX_DELAY_MS = 500;\nconst DEFAULT_NUMBER_OF_TAPS = 1;\nconst DEFAULT_MIN_NUMBER_OF_POINTERS = 1;\n\nexport default class TapGestureHandler extends GestureHandler {\n  private maxDeltaX = Number.MIN_SAFE_INTEGER;\n  private maxDeltaY = Number.MIN_SAFE_INTEGER;\n  private maxDistSq = Number.MIN_SAFE_INTEGER;\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private maxDelayMs = DEFAULT_MAX_DELAY_MS;\n\n  private numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n  private minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  private currentMaxNumberOfPointers = 1;\n\n  private startX = 0;\n  private startY = 0;\n  private offsetX = 0;\n  private offsetY = 0;\n  private lastX = 0;\n  private lastY = 0;\n\n  private waitTimeout: number | undefined;\n  private delayTimeout: number | undefined;\n\n  private tapsSoFar = 0;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n    this.setShouldCancelWhenOutside(true);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.numberOfTaps !== undefined) {\n      this.numberOfTaps = this.config.numberOfTaps;\n    }\n\n    if (this.config.maxDurationMs !== undefined) {\n      this.maxDurationMs = this.config.maxDurationMs;\n    }\n\n    if (this.config.maxDelayMs !== undefined) {\n      this.maxDelayMs = this.config.maxDelayMs;\n    }\n\n    if (this.config.maxDeltaX !== undefined) {\n      this.maxDeltaX = this.config.maxDeltaX;\n    }\n\n    if (this.config.maxDeltaY !== undefined) {\n      this.maxDeltaY = this.config.maxDeltaY;\n    }\n\n    if (this.config.maxDist !== undefined) {\n      this.maxDistSq = this.config.maxDist * this.config.maxDist;\n    }\n\n    if (this.config.minPointers !== undefined) {\n      this.minNumberOfPointers = this.config.minPointers;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n\n    this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n    this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n    this.maxDistSq = Number.MIN_SAFE_INTEGER;\n    this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n    this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n    this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n    this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  }\n\n  protected transformNativeEvent() {\n    const rect: DOMRect = this.view.getBoundingClientRect();\n\n    return {\n      x: this.tracker.getLastAvgX() - rect.left,\n      y: this.tracker.getLastAvgY() - rect.top,\n      absoluteX: this.tracker.getLastAvgX(),\n      absoluteY: this.tracker.getLastAvgY(),\n    };\n  }\n\n  private clearTimeouts(): void {\n    clearTimeout(this.waitTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  private startTap(): void {\n    this.clearTimeouts();\n\n    this.waitTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n\n  private endTap(): void {\n    this.clearTimeouts();\n\n    if (\n      ++this.tapsSoFar === this.numberOfTaps &&\n      this.currentMaxNumberOfPointers >= this.minNumberOfPointers\n    ) {\n      this.activate();\n    } else {\n      this.delayTimeout = setTimeout(() => this.fail(), this.maxDelayMs);\n    }\n  }\n\n  //Handling Events\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.trySettingPosition(event);\n\n    this.startX = event.x;\n    this.startY = event.y;\n\n    this.lastX = event.x;\n    this.lastY = event.y;\n\n    this.updateState(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    super.onPointerAdd(event);\n    this.tracker.addToTracker(event);\n    this.trySettingPosition(event);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY - this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.tracker.getLastAvgX();\n    this.startY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.updateState(event);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY = this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n\n    this.updateState(event);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n\n    super.onPointerOutOfBounds(event);\n  }\n\n  protected onPointerCancel(event: AdaptedEvent): void {\n    super.onPointerCancel(event);\n    this.tracker.resetTracker();\n    this.fail();\n  }\n\n  private updateState(event: AdaptedEvent): void {\n    if (\n      this.currentMaxNumberOfPointers < this.tracker.getTrackedPointersCount()\n    ) {\n      this.currentMaxNumberOfPointers = this.tracker.getTrackedPointersCount();\n    }\n\n    if (this.shouldFail()) {\n      this.fail();\n      return;\n    }\n\n    switch (this.currentState) {\n      case State.UNDETERMINED:\n        if (event.eventType === EventTypes.DOWN) {\n          this.begin();\n        }\n        this.startTap();\n        break;\n      case State.BEGAN:\n        if (event.eventType === EventTypes.UP) {\n          this.endTap();\n        }\n        if (event.eventType === EventTypes.DOWN) {\n          this.startTap();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  private trySettingPosition(event: AdaptedEvent): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.startX = event.x;\n    this.startY = event.y;\n  }\n\n  private shouldFail(): boolean {\n    const dx = this.lastX - this.startX + this.offsetX;\n\n    if (\n      this.maxDeltaX !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dx) > this.maxDeltaX\n    ) {\n      return true;\n    }\n\n    const dy = this.lastY - this.startY + this.offsetY;\n    if (\n      this.maxDeltaY !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dy) > this.maxDeltaY\n    ) {\n      return true;\n    }\n\n    const distSq = dy * dy + dx * dx;\n\n    return (\n      this.maxDistSq !== Number.MIN_SAFE_INTEGER && distSq > this.maxDistSq\n    );\n  }\n\n  public activate(): void {\n    super.activate();\n\n    this.end();\n  }\n\n  protected onCancel(): void {\n    this.resetProgress();\n    this.clearTimeouts();\n  }\n\n  protected resetProgress(): void {\n    this.clearTimeouts();\n    this.tapsSoFar = 0;\n    this.currentMaxNumberOfPointers = 0;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}