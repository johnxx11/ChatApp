{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"get\",\"request\"];import{useCallback,useEffect,useRef,useState}from'react';function usePermission(methods,options){var isMounted=useRef(true);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var _ref=options||{},_ref$get=_ref.get,get=_ref$get===void 0?true:_ref$get,_ref$request=_ref.request,request=_ref$request===void 0?false:_ref$request,permissionOptions=_objectWithoutProperties(_ref,_excluded);var getPermission=useCallback(_asyncToGenerator(function*(){var response=yield methods.getMethod(Object.keys(permissionOptions).length>0?permissionOptions:undefined);if(isMounted.current)setStatus(response);return response;}),[methods.getMethod]);var requestPermission=useCallback(_asyncToGenerator(function*(){var response=yield methods.requestMethod(Object.keys(permissionOptions).length>0?permissionOptions:undefined);if(isMounted.current)setStatus(response);return response;}),[methods.requestMethod]);useEffect(function runMethods(){if(request)requestPermission();if(!request&&get)getPermission();},[get,request,requestPermission,getPermission]);useEffect(function didMount(){isMounted.current=true;return function(){isMounted.current=false;};},[]);return[status,requestPermission,getPermission];}export function createPermissionHook(methods){return function(options){return usePermission(methods,options);};}","map":{"version":3,"sources":["../src/PermissionsHook.ts"],"names":[],"mappings":"6PAAA,OAAS,WAAT,CAAsB,SAAtB,CAAiC,MAAjC,CAAyC,QAAzC,KAAyD,OAAzD,CA6BA,QAAS,cAAT,CACE,OADF,CAEE,OAFF,CAE0C,CAExC,GAAM,UAAS,CAAG,MAAM,CAAC,IAAD,CAAxB,CACA,cAA4B,QAAQ,CAAoB,IAApB,CAApC,wCAAO,MAAP,eAAe,SAAf,eACA,SAA8D,OAAO,EAAI,EAAzE,eAAQ,GAAR,CAAQ,GAAR,mBAAc,IAAd,4BAAoB,OAApB,CAAoB,OAApB,uBAA8B,KAA9B,cAAwC,iBAAxC,0CAEA,GAAM,cAAa,CAAG,WAAW,mBAAC,WAAW,CAC3C,GAAM,SAAQ,MAAS,QAAO,CAAC,SAAR,CACrB,MAAM,CAAC,IAAP,CAAY,iBAAZ,EAA+B,MAA/B,CAAwC,CAAxC,CAA6C,iBAA7C,CAA6E,SADxD,CAAvB,CAGA,GAAI,SAAS,CAAC,OAAd,CAAuB,SAAS,CAAC,QAAD,CAAT,CACvB,MAAO,SAAP,CACD,CANgC,EAM9B,CAAC,OAAO,CAAC,SAAT,CAN8B,CAAjC,CAQA,GAAM,kBAAiB,CAAG,WAAW,mBAAC,WAAW,CAC/C,GAAM,SAAQ,MAAS,QAAO,CAAC,aAAR,CACrB,MAAM,CAAC,IAAP,CAAY,iBAAZ,EAA+B,MAA/B,CAAwC,CAAxC,CAA6C,iBAA7C,CAA6E,SADxD,CAAvB,CAGA,GAAI,SAAS,CAAC,OAAd,CAAuB,SAAS,CAAC,QAAD,CAAT,CACvB,MAAO,SAAP,CACD,CANoC,EAMlC,CAAC,OAAO,CAAC,aAAT,CANkC,CAArC,CAQA,SAAS,CACP,QAAS,WAAT,EAAmB,CACjB,GAAI,OAAJ,CAAa,iBAAiB,GAC9B,GAAI,CAAC,OAAD,EAAY,GAAhB,CAAqB,aAAa,GACnC,CAJM,CAKP,CAAC,GAAD,CAAM,OAAN,CAAe,iBAAf,CAAkC,aAAlC,CALO,CAAT,CASA,SAAS,CAAC,QAAS,SAAT,EAAiB,CACzB,SAAS,CAAC,OAAV,CAAoB,IAApB,CACA,MAAO,WAAK,CACV,SAAS,CAAC,OAAV,CAAoB,KAApB,CACD,CAFD,CAGD,CALQ,CAKN,EALM,CAAT,CAOA,MAAO,CAAC,MAAD,CAAS,iBAAT,CAA4B,aAA5B,CAAP,CACD,CAMD,MAAM,SAAU,qBAAV,CACJ,OADI,CAC+C,CAEnD,MAAO,UAAC,OAAD,QACL,cAAa,CAAsB,OAAtB,CAA+B,OAA/B,CADR,EAAP,CAED","sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { PermissionResponse } from './PermissionsInterface';\n\n// These types are identical, but improves the readability for suggestions in editors\ntype RequestPermissionMethod<Permission extends PermissionResponse> = () => Promise<Permission>;\ntype GetPermissionMethod<Permission extends PermissionResponse> = () => Promise<Permission>;\n\ninterface PermissionHookMethods<Permission extends PermissionResponse, Options = never> {\n  /** The permission method that requests the user to grant permission. */\n  requestMethod: (options?: Options) => Promise<Permission>;\n  /** The permission method that only fetches the current permission status. */\n  getMethod: (options?: Options) => Promise<Permission>;\n}\n\ninterface PermissionHookBehavior {\n  /** If the hook should automatically fetch the current permission status, without asking the user. */\n  get?: boolean;\n  /** If the hook should automatically request the user to grant permission. */\n  request?: boolean;\n}\n\nexport type PermissionHookOptions<Options extends object> = PermissionHookBehavior & Options;\n\n/**\n * Get or request permission for protected functionality within the app.\n * It uses separate permission requesters to interact with a single permission.\n * By default, the hook will only retrieve the permission status.\n */\nfunction usePermission<Permission extends PermissionResponse, Options extends object>(\n  methods: PermissionHookMethods<Permission, Options>,\n  options?: PermissionHookOptions<Options>\n): [Permission | null, RequestPermissionMethod<Permission>, GetPermissionMethod<Permission>] {\n  const isMounted = useRef(true);\n  const [status, setStatus] = useState<Permission | null>(null);\n  const { get = true, request = false, ...permissionOptions } = options || {};\n\n  const getPermission = useCallback(async () => {\n    const response = await methods.getMethod(\n      Object.keys(permissionOptions).length > 0 ? (permissionOptions as Options) : undefined\n    );\n    if (isMounted.current) setStatus(response);\n    return response;\n  }, [methods.getMethod]);\n\n  const requestPermission = useCallback(async () => {\n    const response = await methods.requestMethod(\n      Object.keys(permissionOptions).length > 0 ? (permissionOptions as Options) : undefined\n    );\n    if (isMounted.current) setStatus(response);\n    return response;\n  }, [methods.requestMethod]);\n\n  useEffect(\n    function runMethods() {\n      if (request) requestPermission();\n      if (!request && get) getPermission();\n    },\n    [get, request, requestPermission, getPermission]\n  );\n\n  // Workaround for unmounting components receiving state updates\n  useEffect(function didMount() {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return [status, requestPermission, getPermission];\n}\n\n/**\n * Create a new permission hook with the permission methods built-in.\n * This can be used to quickly create specific permission hooks in every module.\n */\nexport function createPermissionHook<Permission extends PermissionResponse, Options extends object>(\n  methods: PermissionHookMethods<Permission, Options>\n) {\n  return (options?: PermissionHookOptions<Options>) =>\n    usePermission<Permission, Options>(methods, options);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}