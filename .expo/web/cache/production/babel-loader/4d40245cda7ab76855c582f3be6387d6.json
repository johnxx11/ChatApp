{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{getPathFromState,NavigationHelpersContext}from'@react-navigation/core';import*as React from'react';import LinkingContext from\"./LinkingContext\";var getRootStateForNavigate=function getRootStateForNavigate(navigation,state){var parent=navigation.getParent();if(parent){var parentState=parent.getState();return getRootStateForNavigate(parent,{index:0,routes:[_objectSpread(_objectSpread({},parentState.routes[parentState.index]),{},{state:state})]});}return state;};export default function useLinkBuilder(){var navigation=React.useContext(NavigationHelpersContext);var linking=React.useContext(LinkingContext);var buildLink=React.useCallback(function(name,params){var options=linking.options;if((options===null||options===void 0?void 0:options.enabled)===false){return undefined;}var state=navigation?getRootStateForNavigate(navigation,{index:0,routes:[{name:name,params:params}]}):{index:0,routes:[{name:name,params:params}]};var path=options!==null&&options!==void 0&&options.getPathFromState?options.getPathFromState(state,options===null||options===void 0?void 0:options.config):getPathFromState(state,options===null||options===void 0?void 0:options.config);return path;},[linking,navigation]);return buildLink;}","map":{"version":3,"sources":["useLinkBuilder.tsx"],"names":["getPathFromState","NavigationHelpersContext","React","LinkingContext","getRootStateForNavigate","navigation","state","parent","getParent","parentState","getState","index","routes","useLinkBuilder","useContext","linking","buildLink","useCallback","name","params","options","enabled","undefined","path","config"],"mappings":"w0BAAA,OACEA,gBADF,CAGEC,wBAHF,KAMO,wBANP,CAOA,MAAO,GAAKC,MAAZ,KAAuB,OAAvB,CAEA,MAAOC,eAAP,wBAWA,GAAMC,wBAAuB,CAAG,QAA1BA,wBAA0B,CAC9BC,UAD8B,CAE9BC,KAF8B,CAGb,CACjB,GAAMC,OAAM,CAAGF,UAAU,CAACG,SAAXH,EAAf,CAEA,GAAIE,MAAJ,CAAY,CACV,GAAME,YAAW,CAAGF,MAAM,CAACG,QAAPH,EAApB,CAEA,MAAOH,wBAAuB,CAACG,MAAD,CAAS,CACrCI,KAAK,CAAE,CAD8B,CAErCC,MAAM,CAAE,gCAEDH,WAAW,CAACG,MAAZH,CAAmBA,WAAW,CAACE,KAA/BF,CAFC,MAGJH,KAAK,CAAEA,KAHH,GAF6B,CAAT,CAA9B,CASF,CAEA,MAAOA,MAAP,CACD,CArBD,CA2BA,cAAe,SAASO,eAAT,EAA0B,CACvC,GAAMR,WAAU,CAAGH,KAAK,CAACY,UAANZ,CAAiBD,wBAAjBC,CAAnB,CACA,GAAMa,QAAO,CAAGb,KAAK,CAACY,UAANZ,CAAiBC,cAAjBD,CAAhB,CAEA,GAAMc,UAAS,CAAGd,KAAK,CAACe,WAANf,CAChB,SAACgB,IAAD,CAAeC,MAAf,CAAmC,CACjC,GAAQC,QAAR,CAAoBL,OAApB,CAAQK,OAAR,CAEA,GAAI,CAAA,OAAO,GAAA,IAAP,EAAA,OAAO,GAAA,IAAA,EAAP,CAAO,IAAA,EAAP,CAAA,OAAO,CAAEC,OAAT,IAAqB,KAAzB,CAAgC,CAC9B,MAAOC,UAAP,CACF,CAEA,GAAMhB,MAAK,CAAGD,UAAU,CACpBD,uBAAuB,CAACC,UAAD,CAAa,CAClCM,KAAK,CAAE,CAD2B,CAElCC,MAAM,CAAE,CAAC,CAAEM,IAAI,CAAJA,IAAF,CAAQC,MAAAA,CAAAA,MAAR,CAAD,CAF0B,CAAb,CADH,CAOpB,CACER,KAAK,CAAE,CADT,CAEEC,MAAM,CAAE,CAAC,CAAEM,IAAI,CAAJA,IAAF,CAAQC,MAAAA,CAAAA,MAAR,CAAD,CAFV,CAPJ,CAYA,GAAMI,KAAI,CAAGH,OAAO,GAAA,IAAPA,EAAAA,OAAO,GAAA,IAAA,EAAPA,EAAAA,OAAO,CAAEpB,gBAAToB,CACTA,OAAO,CAACpB,gBAARoB,CAAyBd,KAAzBc,CAAgCA,OAAO,GAAA,IAAPA,EAAAA,OAAO,GAAA,IAAA,EAAPA,CAAO,IAAA,EAAPA,CAAAA,OAAO,CAAEI,MAAzCJ,CADSA,CAETpB,gBAAgB,CAACM,KAAD,CAAQc,OAAO,GAAA,IAAPA,EAAAA,OAAO,GAAA,IAAA,EAAPA,CAAO,IAAA,EAAPA,CAAAA,OAAO,CAAEI,MAAjB,CAFpB,CAIA,MAAOD,KAAP,CACD,CAzBerB,CA0BhB,CAACa,OAAD,CAAUV,UAAV,CA1BgBH,CAAlB,CA6BA,MAAOc,UAAP,CACF","sourceRoot":"../../src","sourcesContent":["import { getPathFromState, NavigationHelpersContext } from '@react-navigation/core';\nimport * as React from 'react';\nimport LinkingContext from './LinkingContext';\nconst getRootStateForNavigate = (navigation, state) => {\n  const parent = navigation.getParent();\n  if (parent) {\n    const parentState = parent.getState();\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [{\n        ...parentState.routes[parentState.index],\n        state: state\n      }]\n    });\n  }\n  return state;\n};\n\n/**\n * Build destination link for a navigate action.\n * Useful for showing anchor tags on the web for buttons that perform navigation.\n */\nexport default function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n  const buildLink = React.useCallback((name, params) => {\n    const {\n      options\n    } = linking;\n    if ((options === null || options === void 0 ? void 0 : options.enabled) === false) {\n      return undefined;\n    }\n    const state = navigation ? getRootStateForNavigate(navigation, {\n      index: 0,\n      routes: [{\n        name,\n        params\n      }]\n    }) :\n    // If we couldn't find a navigation object in context, we're at root\n    // So we'll construct a basic state object to use\n    {\n      index: 0,\n      routes: [{\n        name,\n        params\n      }]\n    };\n    const path = options !== null && options !== void 0 && options.getPathFromState ? options.getPathFromState(state, options === null || options === void 0 ? void 0 : options.config) : getPathFromState(state, options === null || options === void 0 ? void 0 : options.config);\n    return path;\n  }, [linking, navigation]);\n  return buildLink;\n}\n//# sourceMappingURL=useLinkBuilder.js.map"]},"metadata":{},"sourceType":"module"}