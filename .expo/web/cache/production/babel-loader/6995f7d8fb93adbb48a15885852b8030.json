{"ast":null,"code":"import*as React from'react';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{initialWindowMetrics,SafeAreaInsetsContext,SafeAreaProvider}from'react-native-safe-area-context';var _Dimensions$get=Dimensions.get('window'),_Dimensions$get$width=_Dimensions$get.width,width=_Dimensions$get$width===void 0?0:_Dimensions$get$width,_Dimensions$get$heigh=_Dimensions$get.height,height=_Dimensions$get$heigh===void 0?0:_Dimensions$get$heigh;var initialMetrics=Platform.OS==='web'||initialWindowMetrics==null?{frame:{x:0,y:0,width:width,height:height},insets:{top:0,left:0,right:0,bottom:0}}:initialWindowMetrics;export default function SafeAreaProviderCompat(_ref){var children=_ref.children,style=_ref.style;return React.createElement(SafeAreaInsetsContext.Consumer,null,function(insets){if(insets){return React.createElement(View,{style:[styles.container,style]},children);}return React.createElement(SafeAreaProvider,{initialMetrics:initialMetrics,style:style},children);});}SafeAreaProviderCompat.initialMetrics=initialMetrics;var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["SafeAreaProviderCompat.tsx"],"names":["React","initialWindowMetrics","SafeAreaInsetsContext","SafeAreaProvider","width","height","Dimensions","get","initialMetrics","Platform","OS","frame","x","y","insets","top","left","right","bottom","SafeAreaProviderCompat","children","style","styles","container","StyleSheet","create","flex"],"mappings":"AAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,C,oPASA,OACEC,oBADF,CAEEC,qBAFF,CAGEC,gBAHF,KAIO,gCAJP,CAWA,oBAAkCG,UAAU,CAACC,GAAXD,CAAe,QAAfA,CAAlC,uCAAQF,KAAR,CAAQA,KAAR,gCAAgB,CAAhB,6DAAmBC,MAAnB,CAAmBA,MAAnB,gCAA4B,CAA5B,uBAKA,GAAMG,eAAc,CAClBC,QAAQ,CAACC,EAATD,GAAgB,KAAhBA,EAAyBR,oBAAoB,EAAI,IAAjDQ,CACI,CACEE,KAAK,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,CAAX,CAAcT,KAAK,CAALA,KAAd,CAAqBC,MAAAA,CAAAA,MAArB,CADT,CAEES,MAAM,CAAE,CAAEC,GAAG,CAAE,CAAP,CAAUC,IAAI,CAAE,CAAhB,CAAmBC,KAAK,CAAE,CAA1B,CAA6BC,MAAM,CAAE,CAArC,CAFV,CADJT,CAKIR,oBANN,CAQA,cAAe,SAASkB,uBAAT,CAA+B,IAA/B,CAA4D,CAA5B,GAAEC,SAAF,CAA0B,IAA1B,CAAEA,QAAF,CAAYC,KAAZ,CAA0B,IAA1B,CAAYA,KAAZ,CAC7C,MACE,MAAA,CAAA,aAAA,CAAC,qBAAqB,CAAC,QAAvB,CAA+B,IAA/B,CACIP,SAAAA,MAAM,CAAK,CACX,GAAIA,MAAJ,CAAY,CAIV,MAAO,MAAA,CAAA,aAAA,CAAC,IAAD,CAAK,CAAC,KAAK,CAAE,CAACQ,MAAM,CAACC,SAAR,CAAmBF,KAAnB,CAAR,CAAL,CAAyCD,QAAzC,CAAP,CACF,CAEA,MACE,MAAA,CAAA,aAAA,CAAC,gBAAD,CAAiB,CAAC,cAAc,CAAEZ,cAAjB,CAAiC,KAAK,CAAEa,KAAxC,CAAjB,CACGD,QADH,CADF,CAKD,CAdH,CADF,CAkBF,CAEAD,sBAAsB,CAACX,cAAvBW,CAAwCX,cAAxCW,CAEA,GAAMG,OAAM,CAAGE,UAAU,CAACC,MAAXD,CAAkB,CAC/BD,SAAS,CAAE,CACTG,IAAI,CAAE,CADG,CADoB,CAAlBF,CAAf","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { Dimensions, Platform, StyleSheet, View } from 'react-native';\nimport { initialWindowMetrics, SafeAreaInsetsContext, SafeAreaProvider } from 'react-native-safe-area-context';\nconst {\n  width = 0,\n  height = 0\n} = Dimensions.get('window');\n\n// To support SSR on web, we need to have empty insets for initial values\n// Otherwise there can be mismatch between SSR and client output\n// We also need to specify empty values to support tests environments\nconst initialMetrics = Platform.OS === 'web' || initialWindowMetrics == null ? {\n  frame: {\n    x: 0,\n    y: 0,\n    width,\n    height\n  },\n  insets: {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n} : initialWindowMetrics;\nexport default function SafeAreaProviderCompat(_ref) {\n  let {\n    children,\n    style\n  } = _ref;\n  return /*#__PURE__*/React.createElement(SafeAreaInsetsContext.Consumer, null, insets => {\n    if (insets) {\n      // If we already have insets, don't wrap the stack in another safe area provider\n      // This avoids an issue with updates at the cost of potentially incorrect values\n      // https://github.com/react-navigation/react-navigation/issues/174\n      return /*#__PURE__*/React.createElement(View, {\n        style: [styles.container, style]\n      }, children);\n    }\n    return /*#__PURE__*/React.createElement(SafeAreaProvider, {\n      initialMetrics: initialMetrics,\n      style: style\n    }, children);\n  });\n}\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n//# sourceMappingURL=SafeAreaProviderCompat.js.map"]},"metadata":{},"sourceType":"module"}