{"ast":null,"code":"import'expo/build/Expo.fx';import AppRegistry from\"react-native-web/dist/exports/AppRegistry\";import Platform from\"react-native-web/dist/exports/Platform\";export default function registerRootComponent(component){if(process.env.NODE_ENV==='production'){AppRegistry.registerComponent('main',function(){return component;});}else{var _require=require(\"./withDevTools\"),withDevTools=_require.withDevTools;AppRegistry.registerComponent('main',function(){return withDevTools(component);});}if(Platform.OS==='web'){var _document$getElementB;var rootTag=(_document$getElementB=document.getElementById('root'))!=null?_document$getElementB:document.getElementById('main');AppRegistry.runApplication('main',{rootTag:rootTag});}}","map":{"version":3,"sources":["../../src/launch/registerRootComponent.tsx"],"names":[],"mappings":"AAAA,MAAO,oBAAP,C,gIAgBA,cAAc,SAAU,sBAAV,CACZ,SADY,CACqB,CAEjC,GAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,GAAyB,YAA7B,CAA2C,CACzC,WAAW,CAAC,iBAAZ,CAA8B,MAA9B,CAAsC,iBAAM,UAAN,EAAtC,EACD,CAFD,IAEO,CACL,aAAyB,OAAO,kBAAhC,CAAQ,YAAR,UAAQ,YAAR,CACA,WAAW,CAAC,iBAAZ,CAA8B,MAA9B,CAAsC,iBAAM,aAAY,CAAC,SAAD,CAAlB,EAAtC,EACD,CAED,GAAI,QAAQ,CAAC,EAAT,GAAgB,KAApB,CAA2B,2BACzB,GAAM,QAAO,wBAAG,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAAH,8BAAsC,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAAnD,CACA,WAAW,CAAC,cAAZ,CAA2B,MAA3B,CAAmC,CAAE,OAAO,CAAP,OAAF,CAAnC,EACD,CACF","sourcesContent":["import 'expo/build/Expo.fx';\n\nimport * as React from 'react';\nimport { AppRegistry, Platform } from 'react-native';\n\ntype InitialProps = {\n  exp: {\n    notification?: any;\n    manifestString?: string;\n    [key: string]: any;\n  };\n  shell?: boolean;\n  shellManifestUrl?: string;\n  [key: string]: any;\n};\n\nexport default function registerRootComponent<P extends InitialProps>(\n  component: React.ComponentType<P>\n): void {\n  if (process.env.NODE_ENV === 'production') {\n    AppRegistry.registerComponent('main', () => component);\n  } else {\n    const { withDevTools } = require('./withDevTools') as typeof import('./withDevTools');\n    AppRegistry.registerComponent('main', () => withDevTools(component));\n  }\n\n  if (Platform.OS === 'web') {\n    const rootTag = document.getElementById('root') ?? document.getElementById('main');\n    AppRegistry.runApplication('main', { rootTag });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}