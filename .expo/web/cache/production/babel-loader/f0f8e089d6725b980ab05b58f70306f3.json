{"ast":null,"code":"import*as React from'react';var NavigationContent=function NavigationContent(_ref){var render=_ref.render,children=_ref.children;return render(children);};export default function useComponent(render){var renderRef=React.useRef(render);renderRef.current=render;React.useEffect(function(){renderRef.current=null;});return React.useRef(function(_ref2){var children=_ref2.children;var render=renderRef.current;if(render===null){throw new Error('The returned component must be rendered in the same render phase as the hook.');}return React.createElement(NavigationContent,{render:render},children);}).current;}","map":{"version":3,"sources":["useComponent.tsx"],"names":["React","NavigationContent","render","children","useComponent","renderRef","useRef","current","useEffect","Error"],"mappings":"AAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CASA,GAAMC,kBAAiB,CAAG,QAApBA,kBAAoB,CAAA,IAAA,CAAiC,CAAhC,GAAEC,OAAF,CAA2B,IAA3B,CAAEA,MAAF,CAAUC,QAAV,CAA2B,IAA3B,CAAUA,QAAV,CACzB,MAAOD,OAAM,CAACC,QAAD,CAAb,CACD,CAFD,CAIA,cAAe,SAASC,aAAT,CAAsBF,MAAtB,CAAsC,CACnD,GAAMG,UAAS,CAAGL,KAAK,CAACM,MAANN,CAA4BE,MAA5BF,CAAlB,CAKAK,SAAS,CAACE,OAAVF,CAAoBH,MAApBG,CAEAL,KAAK,CAACQ,SAANR,CAAgB,UAAM,CACpBK,SAAS,CAACE,OAAVF,CAAoB,IAApBA,CACD,CAFDL,EAIA,MAAOA,MAAK,CAACM,MAANN,CAAa,SAAA,KAAA,CAAiD,CAAhD,GAAEG,SAAF,CAA2C,KAA3C,CAAEA,QAAF,CACnB,GAAMD,OAAM,CAAGG,SAAS,CAACE,OAAzB,CAEA,GAAIL,MAAM,GAAK,IAAf,CAAqB,CACnB,KAAM,IAAIO,MAAJ,CACJ,+EADI,CAAN,CAGF,CAEA,MAAO,MAAA,CAAA,aAAA,CAAC,iBAAD,CAAkB,CAAC,MAAM,CAAEP,MAAT,CAAlB,CAAoCC,QAApC,CAAP,CACD,CAVMH,EAUJO,OAVH,CAWF","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nconst NavigationContent = _ref => {\n  let {\n    render,\n    children\n  } = _ref;\n  return render(children);\n};\nexport default function useComponent(render) {\n  const renderRef = React.useRef(render);\n\n  // Normally refs shouldn't be mutated in render\n  // But we return a component which will be rendered\n  // So it's just for immediate consumption\n  renderRef.current = render;\n  React.useEffect(() => {\n    renderRef.current = null;\n  });\n  return React.useRef(_ref2 => {\n    let {\n      children\n    } = _ref2;\n    const render = renderRef.current;\n    if (render === null) {\n      throw new Error('The returned component must be rendered in the same render phase as the hook.');\n    }\n    return /*#__PURE__*/React.createElement(NavigationContent, {\n      render: render\n    }, children);\n  }).current;\n}\n//# sourceMappingURL=useComponent.js.map"]},"metadata":{},"sourceType":"module"}