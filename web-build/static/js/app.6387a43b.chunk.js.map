{"version":3,"sources":["firebase.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/components/CustomListItem.js","screens/HomeScreen.js","screens/AddChatScreen.js","screens/ChatScreen.js","App.js"],"names":["db","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firestore","auth","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useLayoutEffect","setOptions","title","headerStyle","backgroundColor","headerTitle","View","style","flexDirection","alignItems","Text","color","fontWeight","fontSize","useEffect","onAuthStateChanged","authUser","replace","signIn","signInWithEmailAndPassword","catch","error","alert","TouchableWithoutFeedback","flex","onPress","Keyboard","dismiss","KeyboardAvoidingView","behavior","styles","container","StatusBar","Entypo","name","size","inputContainer","textInput","placeholder","type","value","onChangeText","text","secureTextEntry","onSubmitEditing","containerStyle","button","navigate","StyleSheet","create","width","maginTop","padding","justifyContent","borderRadius","paddingTop","RegisterScreen","setName","imageUrl","setImageUrl","headerBackTitle","headerLeft","TouchableOpacity","left","goBack","AntDesign","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","message","activeOpacity","rounded","source","uri","marginBottom","alignSelf","avatarStyle","raised","timeNow","Date","prototype","getFullMinutes","this","getDate","getMonth","getFullYear","getMinutes","getHours","chatName","right","bottom","lastMessage","time","CustomListItem","id","enterChat","chatMessages","setChatMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","bottomDivider","Content","Title","numberOfLines","ellipsizeMode","Subtitle","timestamp","toDate","HomeScreen","chats","setChats","signOutUser","signOut","headerTitleStyle","headerTintColor","headerBackVisible","currentUser","borderWidth","borderColor","userName","headerRight","FontAwesome","SafeAreaView","ScrollView","height","marginStart","AddChatScreen","input","setInput","createChat","add","leftIcon","disabled","trim","chatContainer","footer","marginRight","receiver","maxWidth","position","sender","marginLeft","senderText","senderName","receiverText","senderTime","receiverTime","chatIcon","chatIcon2","ChatScreen","route","messages","setMessages","headerBackTitleVisible","headerTitleAlign","params","Ionicons","sendMessage","FieldValue","serverTimestamp","Platform","OS","keyboardVerticalOffset","contentContainerStyle","TextInput","Stack","createNativeStackNavigator","globalScreenOptions","App","NavigationContainer","Navigator","screenOptions","Screen","component"],"mappings":"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","file":"static/js/app.6387a43b.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\"\nimport \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\"\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBS38LOwTz_rhp0xZyGF7WBhYNPh887KSU\",\n    authDomain: \"chatapp-e9fa3.firebaseapp.com\",\n    projectId: \"chatapp-e9fa3\",\n    storageBucket: \"chatapp-e9fa3.appspot.com\",\n    messagingSenderId: \"232549271290\",\n    appId: \"1:232549271290:web:2e5beb4a29afe30f3beb43\"\n};\n\nlet app;\n\nif (firebase.apps.length === 0) {\n    app = firebase.initializeApp(firebaseConfig);\n} else {\n    app = firebase.app();\n}\n\nconst db = app.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { StyleSheet, View, KeyboardAvoidingView, Text, Keyboard, TouchableWithoutFeedback } from \"react-native\";\nimport { Button, Input, Pressable } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Entypo } from '@expo/vector-icons';\nimport { auth } from \"../firebase\";\n\nconst LoginScreen = ({ navigation }) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"ChatApp\",\n            headerStyle: { backgroundColor: \"#191970\" },\n            headerTitle: () => (\n                <View style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                }}>\n  \n                    <Text style={{ color: \"white\", fontWeight: \"800\", fontSize: 18}}>\n                        C H A T A P P\n                    </Text>\n                </View>\n            )\n        })\n    });\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged((authUser) => {\n            if (authUser) {\n                navigation.replace(\"Home\");\n            }\n        });\n    \n        return unsubscribe;\n    }, []);\n\n    const signIn = () => {\n        auth.signInWithEmailAndPassword(email, password)\n        .catch((error) => alert(error));\n    };\n\n    return (\n        <TouchableWithoutFeedback style={{ flex: 1 }} onPress={Keyboard.dismiss}>\n        \n        <KeyboardAvoidingView behavior='padding' style={styles.container}>\n\n            <StatusBar style=\"light\" />\n            <Entypo name=\"chat\" size={120} color=\"#191970\" />\n            <View style={styles.inputContainer}>\n                <Input \n                    style={styles.textInput}\n                    placeholder=\"Email\"  \n                    type=\"email\" \n                    value={email} \n                    onChangeText={(text) => setEmail(text)}\n                />\n                <Input \n                    style={styles.textInput}\n                    placeholder=\"Password\" \n                    secureTextEntry \n                    type=\"password\"\n                    value={password} \n                    onChangeText={(text) => setPassword(text)}\n                    onSubmitEditing={signIn}\n                />\n            </View>\n            <Button containerStyle={styles.button} onPress={signIn} title=\"Login\" />\n            <Button onPress={() => navigation.navigate('Register')} containerStyle={styles.button} \n            type=\"outline\" title=\"Register\" />\n            \n        </KeyboardAvoidingView>\n        \n        </TouchableWithoutFeedback>\n    );\n};\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n    inputContainer:{\n        width: 300\n    },\n    button: {\n        width: 160,\n        maginTop: 10,\n        padding: 5,\n    },\n    container: {\n      flex: 1,\n      padding: 20,\n      backgroundColor: 'white',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    textInput: {\n        flex: 1,\n        backgroundColor: \"#fff\",\n        color: \"dimgrey\",\n        borderRadius: 5,\n        fontSize: 16,\n        fontWeight: \"700\",\n        padding: 1,\n        paddingTop: 10\n    },\n  });\n","import React, { useLayoutEffect, useState }from 'react';\nimport { StyleSheet, View, KeyboardAvoidingView, TouchableWithoutFeedback, Keyboard, TouchableOpacity, Text } from 'react-native';\nimport { StatusBar } from \"expo-status-bar\";\nimport { Avatar, Button, Input } from \"react-native-elements\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { auth } from \"../firebase\";\n\nconst RegisterScreen = ({ navigation }) => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerBackTitle: \"\",\n            headerStyle: { backgroundColor: \"#191970\" },\n            headerLeft: () => (\n                <TouchableOpacity\n                    style={{ left: -4 }}\n                    onPress={navigation.goBack}\n                >\n                    <AntDesign name=\"caretleft\" size={24} color=\"white\" />\n                </TouchableOpacity>\n            ),\n            headerTitle: () => (\n                <View style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                }}>\n  \n                    <Text style={{ color: \"white\", fontWeight: \"800\", fontSize: 18}}>\n                        Register\n                    </Text>\n                </View>\n            )\n        });\n    }, [navigation]);\n\n    const register = () => {\n        auth.createUserWithEmailAndPassword(email, password)\n        .then((authUser) => {\n            authUser.user.updateProfile({\n                displayName: name,\n                photoURL: imageUrl || \"https://res.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco,dpr_1/nesuuhyyzmjip7zg0kg4\",\n            })\n        }).catch((error) => alert(error.message));\n    }\n\n    return (\n        <TouchableWithoutFeedback style={{ flex: 1 }} onPress={Keyboard.dismiss}>\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n            <StatusBar style=\"light\" />\n            <TouchableOpacity activeOpacity={0.5}>\n            <Avatar \n                rounded \n                size={130}\n                source={{ uri: \"https://res.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco,dpr_1/nesuuhyyzmjip7zg0kg4\"}}\n                containerStyle={{marginBottom: 30, alignSelf:\"center\"}}\n                avatarStyle={{}}\n            />\n            </TouchableOpacity>\n            <View style={styles.inputContainer}>\n                <Input \n                    placeholder='User Name' \n                    style={styles.textInput}\n                    type='text' \n                    value={name}\n                    onChangeText={text => setName(text)}\n                />\n                <Input \n                    style={styles.textInput}\n                    placeholder='Email' \n                    type='email' \n                    value={email}\n                    onChangeText={text => setEmail(text)}\n                />\n                <Input \n                    style={styles.textInput}\n                    placeholder='Password' \n                    secureTextEntry\n                    type='password' \n                    value={password}\n                    onChangeText={text => setPassword(text)}\n                />\n                <Input \n                    style={styles.textInput}\n                    placeholder='Profile Picture URL (optional)' \n                    type='text' \n                    value={imageUrl}\n                    onChangeText={text => setImageUrl(text)}\n                    onSubmitEditing={register}\n                />\n            </View>\n\n            <Button \n                containerStyle={styles.button}\n                raised \n                onPress={register} \n                title=\"Continue\" \n            />\n        </KeyboardAvoidingView>\n        </TouchableWithoutFeedback>\n    );\n};\n\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n    button: {\n        width: 160,\n        marginBottom: 80,\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'white',\n        \n    },\n    inputContainer: {\n        width: 280,\n    },\n    textInput: {\n        flex: 1,\n        backgroundColor: \"#fff\",\n        color: \"dimgrey\",\n        borderRadius: 5,\n        fontSize: 16,\n        fontWeight: \"700\",\n        padding: 1,\n        paddingTop: 10\n    },\n});","import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { Avatar, ListItem } from 'react-native-elements';\nimport { db } from '../../firebase';\n\nlet timeNow = new Date();\n\nDate.prototype.getFullMinutes = function () {\n    if (this.getDate() < timeNow.getDate() || \n        (this.getDate() >= timeNow.getDate() && this.getMonth() < timeNow.getMonth()) ||\n        (this.getDate() >= timeNow.getDate() && this.getMonth() >= timeNow.getMonth() && this.getFullYear() < timeNow.getFullYear())) {\n        return (this.getMonth() + 1) + \"/\" + this.getDate();\n    }\n    if (this.getMinutes() < 10) {\n        return this.getHours()+ \":0\" + this.getMinutes();\n    }\n    return this.getHours() + \":\" + this.getMinutes();\n };\n\nconst CustomListItem = ({ id, chatName, enterChat }) => {\n    const [chatMessages, setChatMessages] = useState([]);\n    \n    useEffect(() => {\n        const unsubscribe = db\n            .collection('chats')\n            .doc(id)\n            .collection('messages')\n            .orderBy('timestamp', 'desc')\n            .onSnapshot((snapshot) =>\n                setChatMessages(snapshot.docs.map((doc) => doc.data()))\n            );\n        return unsubscribe;\n    });\n\n    return (\n        <ListItem onPress={() => enterChat(id, chatName)} key={id} bottomDivider style={styles.container}>\n            <Avatar\n                size={40}\n                source={{uri: chatMessages?.[0]?.photoURL || \n                \"https://res.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco,dpr_1/nesuuhyyzmjip7zg0kg4\"}}\n                avatarStyle={{borderRadius: 5 }}\n            />\n            <ListItem.Content>\n                <ListItem.Title style={styles.chatName} numberOfLines={1} ellipsizeMode=\"tail\">\n                    {chatName}\n                </ListItem.Title>\n                <ListItem.Subtitle style={styles.lastMessage} numberOfLines={1} ellipsizeMode=\"tail\">   \n                    {(chatMessages[0]) ? (chatMessages[0].displayName + \": \" + chatMessages[0].message) : ('')}  \n                </ListItem.Subtitle>\n            </ListItem.Content>\n            <Text style={styles.time}>{chatMessages?.[0]?.timestamp?.toDate()?.getFullMinutes()}</Text>\n        </ListItem>\n    );\n};\n\nconst styles = StyleSheet.create({\n    chatName: {\n        fontWeight: \"800\",\n        flexDirection: \"row\",\n        color: \"#191970\",\n        fontSize: 16,\n        alignSelf: \"flex-start\",\n        right: 8,\n        bottom: 3,\n    },\n    lastMessage: {\n        color: \"grey\",\n        fontWeight: \"600\",\n        flexDirection: \"row\",\n        alignSelf: \"flex-start\",\n        right: 8,\n        fontSize: \"15\",\n    },\n    time: {\n        alignSelf: \"flex-end\",\n        color: \"grey\",\n        fontWeight: \"600\",\n        fontSize: \"15\",\n        alignSelf: \"flex-end\",\n    }\n});\n\nexport default CustomListItem;\n","import React, { useEffect, useLayoutEffect, useState }from 'react';\nimport { StyleSheet, View, Text, SafeAreaView, ScrollView, TouchableOpacity } from 'react-native';\nimport { StatusBar } from \"expo-status-bar\";\nimport { Avatar } from 'react-native-elements';\nimport CustomListItem from './components/CustomListItem';\nimport { Entypo, FontAwesome } from \"@expo/vector-icons\";\nimport { auth, db } from \"../firebase\";\n\nconst HomeScreen = ({ navigation }) => {\n    const [chats, setChats] = useState([]);\n\n    const signOutUser = () => {\n        auth.signOut().then(() => {\n            navigation.replace(\"Login\")\n        });\n    };\n\n    useEffect(() => {\n        const unsubscribe = db.collection('chats').onSnapshot(snapshot => (\n            setChats(snapshot.docs.map(doc => ({\n                id: doc.id,\n                data: doc.data()\n            })))\n        ));\n        return unsubscribe;\n    }, []);\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"\",\n            headerStyle: { backgroundColor: \"#191970\" },\n            headerTitleStyle: { color: \"white\" },\n            headerTintColor: \"white\",\n            headerBackVisible: false,\n            \n            headerLeft: () => (\n                <View style={{ \n                    right: 3, \n                    bottom: 3,                    \n                    flexDirection: \"row\",\n                    width: 75,\n                    justifyContent: \"space-between\", \n                }}>\n                    <TouchableOpacity activeOpacity={0.5}>\n                        <Avatar \n                            rounded \n                            size={35}\n                            source={{ uri: auth?.currentUser?.photoURL}}\n                            avatarStyle={{\n                                borderWidth: 2,\n                                borderColor: '#fff'}}\n                        />\n                    </TouchableOpacity>\n                    <Text style={styles.userName}>{auth?.currentUser?.displayName}</Text>\n                </View>\n            ),\n            headerRight: () => (\n                <View style={{\n                    left: 3,\n                    bottom: 3,   \n                    flexDirection: \"row\",\n                    width: 70,\n                    justifyContent: \"space-between\",\n                    \n                }}>\n                    <TouchableOpacity activeOpacity={0.5}>\n                        <Entypo onPress={() => navigation.navigate(\"AddChat\")} name=\"new-message\" size={24} color=\"#FFF\" />\n                    </TouchableOpacity>\n                    <TouchableOpacity onPress={signOutUser} activeOpacity={0.5}>\n                        <FontAwesome name=\"sign-out\" size={27} color=\"#FFF\"/>\n                    </TouchableOpacity>\n                </View>\n            ),\n        });\n    }, [navigation]);\n\n    const enterChat = (id, chatName) => {\n        navigation.navigate('Chat', {\n            id: id,\n            chatName: chatName,\n        });\n    };\n\n    return (\n      <SafeAreaView>\n        <StatusBar style=\"light\" />\n        <ScrollView style={styles.container} >\n            {chats.map(({id, data: { chatName }}) => (\n                <CustomListItem \n                    key={id} \n                    id={id} \n                    chatName={chatName} \n                    enterChat={enterChat}\n                />\n            ))}\n        </ScrollView>\n      </SafeAreaView>\n    );\n}\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n    container: {\n        height: '100%',\n        \n    },\n    userName: {\n        flexDirection: \"row\",\n        color: \"white\",\n        fontWeight: \"600\",\n        fontSize: 20,\n        alignSelf: \"center\",\n        marginStart: 10,\n        justifyContent: \"center\"\n    }\n});\n","import React, { useState, useLayoutEffect } from 'react';\nimport { View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Button, Input} from \"react-native-elements\";\nimport { Entypo, AntDesign } from '@expo/vector-icons';\nimport { db } from '../firebase';\n\nconst AddChatScreen = ({ navigation }) => {\n    const [input, setInput] = useState(\"\");\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"New Chat Rooms\",\n            headerStyle: { backgroundColor: \"#191970\" },\n            headerLeft: () => (\n                <TouchableOpacity\n                    style={{ left: -4 }}\n                    onPress={navigation.goBack}\n                >\n                    <AntDesign name=\"caretleft\" size={24} color=\"white\" />\n                </TouchableOpacity>\n            ),\n        });\n    }, [navigation]);\n\n    const createChat = async () => {\n        await db.collection('chats').add({\n            chatName: input,\n        }).then(() => {\n            navigation.goBack();\n        }).catch((error) => alert(error));\n    };\n\n    return (\n        <View style={styles.container}>\n            <Input\n                placeholder=\"Chat Room Name\" \n                value={input} \n                onChangeText={(text) => setInput(text)}\n                onSubmitEditing={createChat}\n                leftIcon={\n                    <Entypo name=\"chat\" size={30} color=\"grey\" />\n                }\n            />\n            <Button onPress={createChat} title='Create' disabled={!input || input.trim() === \"\"}/>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        width: \"99%\",\n        alignSelf: \"center\",\n    },\n});\n\nexport default AddChatScreen;\n","import React, { useLayoutEffect, useState } from 'react';\nimport { KeyboardAvoidingView, SafeAreaView, View, Text, StyleSheet, TouchableOpacity, Platform, Keyboard, } from 'react-native';\nimport { Avatar } from 'react-native-elements';\nimport { Ionicons, AntDesign } from \"@expo/vector-icons\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { TextInput, ScrollView } from 'react-native';\nimport firebase from \"firebase/compat/app\"\nimport { db, auth } from '../firebase';\n\nlet timeNow = new Date();\n\nDate.prototype.getFullMinutes = function () {\n    if (this.getDate() < timeNow.getDate() || \n        (this.getDate() >= timeNow.getDate() && this.getMonth() < timeNow.getMonth()) ||\n        (this.getDate() >= timeNow.getDate() && this.getMonth() >= timeNow.getMonth() && this.getFullYear() < timeNow.getFullYear())) {\n        return (this.getMonth() + 1) + \"/\" + this.getDate();\n    }\n    if (this.getMinutes() < 10) {\n        return this.getHours()+ \":0\" + this.getMinutes();\n    }\n    return this.getHours() + \":\" + this.getMinutes();\n };\n\nconst ChatScreen = ({ navigation, route }) => {\n    const [input, setInput] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"Chat\",\n            headerBackTitleVisible: false,\n            headerStyle: { backgroundColor: \"#191970\" },\n            headerTitleAlign: \"left\",\n\n            headerTitle: () => (\n                <View style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                }}>\n  \n                    <Text style={{ color: \"white\", fontWeight: \"800\", fontSize: 18}}>\n                        {route.params.chatName}\n                    </Text>\n                </View>\n            ),\n            headerLeft: () => (\n                <TouchableOpacity\n                    style={{ left: -3 }}\n                    onPress={navigation.goBack}\n                >\n                    <AntDesign name=\"caretleft\" size={24} color=\"white\" />\n                </TouchableOpacity>\n            ),\n            headerRight: () => (\n                <View\n                    style={{\n                        right: -3\n                    }}\n                >\n                    <TouchableOpacity>\n                        <Ionicons name=\"ellipsis-horizontal\" size={24} color=\"white\"/>\n                    </TouchableOpacity>\n                </View>\n            )\n        });\n    },[navigation, messages]);\n\n    const sendMessage = () => {\n        Keyboard.dismiss();\n\n        db.collection('chats').doc(route.params.id).collection('messages').add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            message: input,\n            displayName: auth.currentUser.displayName,\n            email: auth.currentUser.email,\n            photoURL: auth.currentUser.photoURL\n        });\n\n        setInput(\"\");\n    };\n\n    useLayoutEffect(() => {\n        const unsubscribe = db\n        .collection('chats')\n        .doc(route.params.id)\n        .collection('messages')\n        .orderBy('timestamp', 'desc')\n        .onSnapshot((snapshot) => \n            setMessages(\n                snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    data: doc.data(),\n                }))\n            )\n        );\n        \n        return unsubscribe;\n    }, [route]);\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <StatusBar style={\"light\"} />\n            <KeyboardAvoidingView\n                behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n                style={styles.chatContainer}\n                keyboardVerticalOffset={85}\n            >\n                    <ScrollView\n                        contentContainerStyle={{paddingTop: 25}}>\n                        {messages.map(({ id, data }) => \n                            data.email === auth.currentUser.email ? (\n                                <View key={id} style={styles.receiver}>\n                                    \n                                    <Avatar\n                                        position=\"absolute\"\n                                        containerStyle={{\n                                            position:\"absolute\",\n                                            right:-50,\n                                        }}\n                                        right={-50} \n                                        source={{uri:data.photoURL}} \n                                        size={42}\n                                        avatarStyle={{borderRadius: 5}}\n                                    />\n                                    <AntDesign style={styles.chatIcon} name=\"caretright\" size={8} />\n                                    <Text style={styles.receiverText}>{data.message}</Text>\n                                    <Text style={styles.receiverTime}>\n                                        {(data.timestamp)? (data.timestamp.toDate().getFullMinutes()) : (\"\")}\n                                    </Text>\n                                    \n                                </View>\n                            ) : (\n                                <View key={id} style={styles.sender}>\n                                    <Avatar\n                                        position=\"absolute\"\n                                        containerStyle={{\n                                            position:\"absolute\",\n                                            left:-50,            \n                                        }}\n                                        left={-50} \n                                        source={{uri:data.photoURL}} \n                                        size={42}\n                                        avatarStyle={{borderRadius: 5}}\n                                    />\n                                    <AntDesign style={styles.chatIcon2} name=\"caretleft\" size={8} color=\"black\" />\n                                    <Text style={styles.senderName}>{data.displayName}</Text>\n                                    \n                                    <Text style={styles.senderText}>{data.message}</Text>\n                                    <Text style={styles.senderTime}>\n                                        {(data.timestamp)? (data.timestamp.toDate().getFullMinutes()) : (\"\")}\n                                    </Text>\n                                </View>\n                            )\n                        )}\n                    </ScrollView>\n                    <View style={styles.footer}>\n                        <TextInput \n                         value={input}\n                         onChangeText={(text) => setInput(text)}\n                         onSubmitEditing={sendMessage}\n                         placeholder=\"Let's chat!\" \n                         style={styles.textInput}\n                        />\n                        <TouchableOpacity \n                            onPress={sendMessage} \n                            activeOpacity={0.5}\n                            disabled={!input || input.trim() === \"\"}\n                        >\n                            <Ionicons \n                                name=\"send\" size={24} \n                                color={(!input || input.trim() === \"\")? \"grey\" : \"#191970\"} />\n                        </TouchableOpacity>\n                    </View> \n            </KeyboardAvoidingView>\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"white\"\n    },\n    chatContainer: {\n        flex: 1,\n    },\n    footer: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        padding: 15,\n        width: \"99%\"\n    },\n    textInput: {\n        bottom: 0,\n        height: 40,\n        flex: 1,\n        marginRight: 15,\n        backgroundColor: \"#ECECEC\",\n        padding: 10,\n        color: \"black\",\n        borderRadius: 15,\n        fontSize: 15,\n        fontWeight: \"600\"\n    },\n    receiver: {\n        padding: 5,\n        backgroundColor: \"#7bb32e\",\n        alignSelf: \"flex-end\",\n        borderRadius: 5,\n        marginRight: 60,\n        marginBottom: 16,\n        maxWidth: \"65%\",\n        position: \"relative\"\n    },\n    sender: {\n        padding: 5,\n        backgroundColor: \"#ECECEC\",\n        alignSelf: \"flex-start\",\n        borderRadius: 5,\n        marginLeft: 60,\n        marginBottom: 20,\n        maxWidth: \"65%\",\n        position: \"relative\"\n    },\n    senderText: {\n        color: \"black\",\n        fontWeight: \"600\",\n        bottom: 8,\n        marginBottom: -3,\n        fontSize: 13\n        \n    },\n    senderName: {\n        fontWeight: \"800\",\n        fontSize: \"14\",\n        bottom: 9,\n        color: \"#191970\"\n    },\n    receiverText: {\n        color: \"black\",\n        fontWeight: \"600\",\n        bottom: 8,\n        marginBottom: -3,\n        fontSize: 13\n    },\n    senderTime: {\n        color: \"#696969\",\n        fontWeight: \"600\",\n        fontSize: \"10\",\n        alignSelf: \"flex-end\",\n        bottom: -1,\n    },\n    receiverTime : {\n        color: \"#696969\",\n        fontWeight: \"600\",\n        fontSize: \"10\",\n        alignSelf: \"flex-end\",\n        bottom: -3\n    },\n    chatIcon: {\n        alignSelf: \"flex-end\",\n        left: 10,\n        bottom: -10,\n        color: \"#7bb32e\"\n    },\n    chatIcon2: {\n        alignSelf: \"flex-start\",\n        right: 10,\n        bottom: -12,\n        color: \"#ECECEC\"\n    }\n});\n\nexport default ChatScreen;\n","import * as React from 'react';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport AddChatScreen from './screens/AddChatScreen';\nimport ChatScreen from './screens/ChatScreen';\n\nconst Stack = createNativeStackNavigator();\n\nconst globalScreenOptions = {\n  headerStyle: { backgroundColor: \"#191970\" },\n  headerTitleStyle: { color: \"white\" },\n  headerTintColor: \"white\",\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={globalScreenOptions}>\n        <Stack.Screen name='Login' component={LoginScreen}/>\n        <Stack.Screen name='Register' component={RegisterScreen}/>\n        <Stack.Screen name='Home' component={HomeScreen}/>\n        <Stack.Screen name='AddChat' component={AddChatScreen}/>\n        <Stack.Screen name='Chat' component={ChatScreen}/>\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n\n"],"sourceRoot":""}