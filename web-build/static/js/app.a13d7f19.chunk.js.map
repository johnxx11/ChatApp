{"version":3,"sources":["firebase.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/components/CustomListItem.js","screens/HomeScreen.js","screens/AddChatScreen.js","screens/ChatScreen.js","App.js"],"names":["db","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firestore","auth","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useLayoutEffect","setOptions","title","useEffect","onAuthStateChanged","authUser","replace","signIn","signInWithEmailAndPassword","catch","error","alert","KeyboardAvoidingView","behavior","style","styles","container","StatusBar","Entypo","name","size","color","View","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","onSubmitEditing","containerStyle","button","onPress","navigate","StyleSheet","create","width","maginTop","padding","flex","backgroundColor","alignItems","justifyContent","RegisterScreen","setName","imageUrl","setImageUrl","headerBackTitle","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","message","h3","marginBottom","raised","marginTop","CustomListItem","id","chatName","enterChat","bottomDivider","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","HomeScreen","chats","setChats","signOutUser","signOut","collection","onSnapshot","snapshot","docs","map","doc","data","headerStyle","headerTitleStyle","headerTintColor","headerBackVisible","headerLeft","left","bottom","flexDirection","rounded","source","uri","currentUser","Text","userName","headerRight","TouchableOpacity","activeOpacity","FontAwesome","SafeAreaView","ScrollView","height","AddChatScreen","input","setInput","createChat","add","goBack","leftIcon","dayjs","extend","relativeTime","chatContainer","footer","textInput","marginRight","borderRadius","receiver","alignSelf","maxWidth","position","sender","marginLeft","senderText","receiverText","ChatScreen","route","messages","setMessages","headerBackTitleVisible","headerTitleAlign","headerTitle","params","AntDesign","right","Ionicons","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","orderBy","Platform","OS","keyboardVerticalOffset","TouchableWithoutFeedback","contentContainerStyle","paddingTop","TextInput","Stack","createNativeStackNavigator","globalScreenOptions","App","NavigationContainer","Navigator","screenOptions","Screen","component"],"mappings":"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","file":"static/js/app.a13d7f19.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\"\nimport \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\"\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBS38LOwTz_rhp0xZyGF7WBhYNPh887KSU\",\n    authDomain: \"chatapp-e9fa3.firebaseapp.com\",\n    projectId: \"chatapp-e9fa3\",\n    storageBucket: \"chatapp-e9fa3.appspot.com\",\n    messagingSenderId: \"232549271290\",\n    appId: \"1:232549271290:web:2e5beb4a29afe30f3beb43\"\n};\n\nlet app;\n\nif (firebase.apps.length === 0) {\n    app = firebase.initializeApp(firebaseConfig);\n} else {\n    app = firebase.app();\n}\n\nconst db = app.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { StyleSheet, View, KeyboardAvoidingView } from \"react-native\";\nimport { Button, Input } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Entypo } from '@expo/vector-icons';\nimport { auth } from \"../firebase\";\n\n\n\nconst LoginScreen = ({ navigation }) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"ChatApp\"\n        })\n    });\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged((authUser) => {\n            if (authUser) {\n                navigation.replace(\"Home\");\n            }\n        });\n    \n        return unsubscribe;\n    }, []);\n\n    const signIn = () => {\n        auth.signInWithEmailAndPassword(email, password)\n        .catch((error) => alert(error));\n    };\n\n    return (\n        <KeyboardAvoidingView behavior='padding' style={styles.container}>\n            <StatusBar style=\"light\" />\n            <Entypo name=\"chat\" size={150} color=\"#2C6BED\" />\n            <View style={styles.inputContainer}>\n                <Input \n                    placeholder=\"Email\" \n                    autoFocus \n                    type=\"email\" \n                    value={email} \n                    onChangeText={(text) => setEmail(text)}\n                />\n                <Input \n                    placeholder=\"Password\" \n                    secureTextEntry \n                    type=\"password\"\n                    value={password} \n                    onChangeText={(text) => setPassword(text)}\n                    onSubmitEditing={signIn}\n                />\n            </View>\n            <Button containerStyle={styles.button} onPress={signIn} title=\"Login\" />\n            <Button onPress={() => navigation.navigate('Register')} containerStyle={styles.button} \n            type=\"outline\" title=\"Register\" />\n        </KeyboardAvoidingView>\n    );\n};\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n    inputContainer:{\n        width: 300\n    },\n\n    button: {\n        width: 180,\n        maginTop: 10,\n        padding: 5,\n    },\n\n    container: {\n      flex: 1,\n      padding: 10,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  });\n","import React, { useLayoutEffect, useState }from 'react';\nimport { StyleSheet, View, KeyboardAvoidingView } from 'react-native';\nimport { StatusBar } from \"expo-status-bar\";\nimport { Button, Input, Text } from \"react-native-elements\";\nimport { auth } from \"../firebase\";\n\nconst RegisterScreen = ({ navigation }) => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerBackTitle: \"Back to Login\",\n        });\n    }, [navigation]);\n\n    const register = () => {\n        auth.createUserWithEmailAndPassword(email, password)\n        .then((authUser) => {\n            authUser.user.updateProfile({\n                displayName: name,\n                photoURL: imageUrl || \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\",\n            })\n        })\n        .catch((error) => alert(error.message));\n    }\n\n    return (\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n            <StatusBar style=\"light\" />\n            <Text h3 style={{ marginBottom: 50 }}> \n                Create a ChatApp Account\n            </Text>\n            <View style={styles.inputContainer}>\n                <Input \n                    placeholder='User Name' \n                    autoFocus \n                    type='text' \n                    value={name}\n                    onChangeText={text => setName(text)}\n                />\n                <Input \n                    placeholder='Email' \n                    type='email' \n                    value={email}\n                    onChangeText={text => setEmail(text)}\n                />\n                <Input \n                    placeholder='Password' \n                    secureTextEntry\n                    type='password' \n                    value={password}\n                    onChangeText={text => setPassword(text)}\n                />\n                <Input \n                    placeholder='Profile Picture URL (optional)' \n                    type='text' \n                    value={imageUrl}\n                    onChangeText={text => setImageUrl(text)}\n                    onSubmitEditing={register}\n                />\n            </View>\n\n            <Button \n                containerStyle={styles.button}\n                raised \n                onPress={register} \n                title=\"Register\" \n            />\n        </KeyboardAvoidingView>\n    );\n};\n\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n    button: {\n        width: 200,\n        marginTop: 10\n    },\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 10,\n        backgroundColor: 'white'\n    },\n    inputContainer: {\n        width: 300,\n    }\n});","import React, { Component } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { Avatar, ListItem } from 'react-native-elements';\n\n\n\nconst CustomListItem = ({ id, chatName, enterChat }) => {\n    return (\n        <ListItem onPress={() => enterChat(id, chatName)} key={id} bottomDivider>\n            <ListItem.Content>\n                <ListItem.Title style={{ fontWeight: \"800\"}}>\n                    {chatName}\n                </ListItem.Title>\n                <ListItem.Subtitle numberOfLines={1} ellipsizeMode=\"tail\">            \n                </ListItem.Subtitle>\n            </ListItem.Content>\n        </ListItem>\n    );\n};\n\nconst styles = StyleSheet.create({\n});\n\nexport default CustomListItem;\n","import React, { useEffect, useLayoutEffect, useState }from 'react';\nimport { StyleSheet, View, Text, SafeAreaView, ScrollView, TouchableOpacity } from 'react-native';\nimport { StatusBar } from \"expo-status-bar\";\nimport { Avatar } from 'react-native-elements';\nimport CustomListItem from './components/CustomListItem';\nimport { Entypo, FontAwesome } from \"@expo/vector-icons\";\nimport { auth, db } from \"../firebase\";\n\nconst HomeScreen = ({ navigation }) => {\n    const [chats, setChats] = useState([]);\n\n    const signOutUser = () => {\n        auth.signOut().then(() => {\n            navigation.replace(\"Login\")\n        });\n    };\n\n    useEffect(() => {\n        const unsubscribe = db.collection('chats').onSnapshot(snapshot => (\n            setChats(snapshot.docs.map(doc => ({\n                id: doc.id,\n                data: doc.data()\n            })))\n        ));\n        return unsubscribe;\n    }, []);\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"\",\n            headerStyle: { backgroundColor: \"#2C6BED\" },\n            headerTitleStyle: { color: \"white\" },\n            headerTintColor: \"white\",\n            headerBackVisible: false,\n            \n            headerLeft: () => (\n                <View style={{ \n                    left: -2, \n                    bottom: 3,                    \n                    flexDirection: \"row\",\n                    width: 75,\n                    justifyContent: \"space-between\", \n                }}>\n                    <Avatar rounded source={{ uri: auth?.currentUser?.photoURL}}/>\n                    <Text style={styles.userName}>{auth?.currentUser?.displayName}</Text>\n                </View>\n            ),\n            headerRight: () => (\n                <View style={{\n                    left: 5,\n                    bottom: 3,   \n                    flexDirection: \"row\",\n                    width: 70,\n                    justifyContent: \"space-between\",\n                    \n                }}>\n                    <TouchableOpacity>\n                        <Entypo onPress={() => navigation.navigate(\"AddChat\")} name=\"new-message\" size={24} color=\"#FFF\" />\n                    </TouchableOpacity>\n                    <TouchableOpacity onPress={signOutUser} activeOpacity={0.5}>\n                        <FontAwesome name=\"sign-out\" size={27} color=\"#FFF\"/>\n                    </TouchableOpacity>\n                </View>\n            ),\n        });\n    }, [navigation]);\n\n    const enterChat = (id, chatName) => {\n        navigation.navigate('Chat', {\n            id: id,\n            chatName: chatName,\n        });\n    };\n\n    return (\n      <SafeAreaView>\n        <StatusBar style=\"light\" />\n        <ScrollView style={styles.container}>\n            {chats.map(({id, data: { chatName }}) => (\n                <CustomListItem \n                    key={id} \n                    id={id} \n                    chatName={chatName} \n                    enterChat={enterChat}\n                />\n            ))}\n        </ScrollView>\n      </SafeAreaView>\n    );\n}\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n    container: {\n        height: '100%',\n    },\n    userName: {\n        color: \"white\",\n        fontWeight: \"600\",\n    }\n});\n","import React, { useState, useLayoutEffect } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Button, Input} from \"react-native-elements\";\nimport { Entypo } from '@expo/vector-icons';\nimport { db } from '../firebase';\n\nconst AddChatScreen = ({ navigation }) => {\n    const [input, setInput] = useState(\"\");\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"Create Chat Room\",\n            \n        });\n    }, [navigation]);\n\n    const createChat = async () => {\n        await db.collection('chats').add({\n            chatName: input,\n        }).then(() => {\n            navigation.goBack();\n        }).catch((error) => alert(error));\n    };\n\n    return (\n        <View style={styles.container}>\n            <Input\n                placeholder=\"Chat Room Name\" \n                value={input} \n                onChangeText={(text) => setInput(text)}\n                onSubmitEditing={createChat}\n                leftIcon={\n                    <Entypo name=\"chat\" size={24} color=\"#2C6BED\" />\n                }\n            />\n            <Button onPress={createChat} title='Create New Chat Room' />\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {},\n});\n\nexport default AddChatScreen;\n","import React, { useLayoutEffect, useState } from 'react';\nimport { KeyboardAvoidingView, SafeAreaView, View, Text, StyleSheet, TouchableOpacity, Platform, Keyboard} from 'react-native';\nimport { Avatar } from 'react-native-elements';\nimport { Ionicons, AntDesign } from \"@expo/vector-icons\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { TextInput, ScrollView, TouchableWithoutFeedback } from 'react-native';\nimport firebase from \"firebase/compat/app\"\nimport { db, auth } from '../firebase';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\ndayjs.extend(relativeTime);\n\nconst ChatScreen = ({ navigation, route }) => {\n    const [input, setInput] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"Chat\",\n            headerBackTitleVisible: false,\n            headerTitleAlign: \"left\",\n            headerTitle: () => (\n                <View style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                }}>\n  \n                    <Text style={{ color: \"white\", fontWeight: \"800\" }}>\n                        {route.params.chatName}\n                    </Text>\n                </View>\n            ),\n            headerLeft: () => (\n                <TouchableOpacity\n                    style={{ left: -4 }}\n                    onPress={navigation.goBack}\n                >\n                    <AntDesign name=\"arrowleft\" size={24} color=\"white\" />\n                </TouchableOpacity>\n            ),\n            headerRight: () => (\n                <View\n                    style={{\n                        right: -4\n                    }}\n                >\n                    <TouchableOpacity>\n                        <Ionicons name=\"ellipsis-horizontal\" size={24} color=\"white\"/>\n                    </TouchableOpacity>\n                </View>\n            )\n        });\n    },[navigation, messages]);\n\n    const sendMessage = () => {\n        Keyboard.dismiss();\n\n        db.collection('chats').doc(route.params.id).collection('messages').add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            message: input,\n            displayName: auth.currentUser.displayName,\n            email: auth.currentUser.email,\n            photoURL: auth.currentUser.photoURL\n        });\n\n        setInput(\"\");\n    };\n\n    useLayoutEffect(() => {\n        const unsubscribe = db\n        .collection('chats')\n        .doc(route.params.id)\n        .collection('messages')\n        .orderBy('timestamp', 'desc')\n        .onSnapshot((snapshot) => \n            setMessages(\n                snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    data: doc.data(),\n                }))\n            )\n        );\n        \n        return unsubscribe;\n    }, [route]);\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <StatusBar style={\"light\"} />\n            <KeyboardAvoidingView\n                behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n                style={styles.chatContainer}\n                keyboardVerticalOffset={90}\n            >\n               <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n                <>\n                    <ScrollView contentContainerStyle={{paddingTop: 15}}>\n                        {messages.map(({ id, data }) => \n                            data.email === auth.currentUser.email ? (\n                                <View key={id} style={styles.receiver}>\n                                    <Avatar\n                                        position=\"absolute\"\n                                        containerStyle={{\n                                            position:\"absolute\",\n                                            right:-45\n                                        }}\n                                        right={-45} \n                                        source={{uri:data.photoURL}} \n                                        size={37}\n                                    />\n                                    <Text style={styles.receiverText}>{data.message}</Text>\n                                </View>\n                            ) : (\n                                <View key={id} style={styles.sender}>\n                                    <Avatar\n                                        position=\"absolute\"\n                                        containerStyle={{\n                                            position:\"absolute\",\n                                            left:-45\n                                        }}\n                                        left={-45} \n                                        source={{uri:data.photoURL}} \n                                        size={37}\n                                    />\n                                    <Text style={styles.senderText}>{data.message}</Text>\n                                </View>\n                            )\n                        )}\n                    </ScrollView>\n                    <View style={styles.footer}>\n                        <TextInput \n                         value={input}\n                         onChangeText={(text) => setInput(text)}\n                         onSubmitEditing={sendMessage}\n                         placeholder=\"Messages\" \n                         style={styles.textInput}\n                        />\n                        <TouchableOpacity \n                            onPress={sendMessage} \n                            activeOpacity={0.5}\n                        >\n                            <Ionicons name=\"send\" size={24} color={\"#2B68E6\"} />\n                        </TouchableOpacity>\n                    </View>\n                </>\n                </TouchableWithoutFeedback>\n            </KeyboardAvoidingView>\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"white\"\n    },\n    chatContainer: {\n        flex: 1,\n    },\n    footer: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        padding: 15,\n        width: \"100%\"\n    },\n    textInput: {\n        bottom: 0,\n        height: 40,\n        flex: 1,\n        marginRight: 15,\n        backgroundColor: \"#ECECEC\",\n        padding: 10,\n        color: \"black\",\n        borderRadius: 30\n    },\n    receiver: {\n        padding: 10,\n        backgroundColor: \"#7BB32E\",\n        alignSelf: \"flex-end\",\n        borderRadius: 10,\n        marginRight: 55,\n        marginBottom: 20,\n        maxWidth: \"65%\",\n        position: \"relative\"\n    },\n    sender: {\n        padding: 10,\n        backgroundColor: \"#ECECEC\",\n        alignSelf: \"flex-start\",\n        borderRadius: 10,\n        marginLeft: 55,\n        marginBottom: 20,\n        maxWidth: \"65%\",\n        position: \"relative\"\n    },\n    senderText: {\n        color: \"black\",\n        fontWeight: \"600\",\n    },\n    receiverText: {\n        color: \"black\",\n        fontWeight: \"600\",\n    },\n});\n\nexport default ChatScreen;\n","import * as React from 'react';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport AddChatScreen from './screens/AddChatScreen';\nimport ChatScreen from './screens/ChatScreen';\n\nconst Stack = createNativeStackNavigator();\n\nconst globalScreenOptions = {\n  headerStyle: { backgroundColor: \"#2C6BED\" },\n  headerTitleStyle: { color: \"white\" },\n  headerTintColor: \"white\",\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={globalScreenOptions}>\n        <Stack.Screen name='Login' component={LoginScreen}/>\n        <Stack.Screen name='Register' component={RegisterScreen}/>\n        <Stack.Screen name='Home' component={HomeScreen}/>\n        <Stack.Screen name='AddChat' component={AddChatScreen}/>\n        <Stack.Screen name='Chat' component={ChatScreen}/>\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n\n"],"sourceRoot":""}